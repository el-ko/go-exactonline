// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package accountancy

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// SolutionLinksEndpoint is responsible for communicating with
// the SolutionLinks endpoint of the Accountancy service.
type SolutionLinksEndpoint service

// SolutionLinks:
// Service: Accountancy
// Entity: SolutionLinks
// URL: /api/v1/{division}/accountancy/SolutionLinks
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=AccountancySolutionLinks
type SolutionLinks struct {
	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// Account: ID of account to which solution is linked
	Account *types.GUID `json:"Account,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// Division: Accountant main division
	Division *int `json:"Division,omitempty"`

	// ExternalSolutionCode: If type is external predefined, represents ID of PracticeManagementExternalSolutions (mandatory for External solution)
	ExternalSolutionCode *int `json:"ExternalSolutionCode,omitempty"`

	// ExternalSolutionName: Name of the external solution
	ExternalSolutionName *string `json:"ExternalSolutionName,omitempty"`

	// ExternalSolutionUrl: Customer URl in external solution, like solution.com/id123 (mandatory for External and ExternalOther solution)
	ExternalSolutionUrl *string `json:"ExternalSolutionUrl,omitempty"`

	// InternalSolutionDivision: Division code of linked internal solution (mandatory for Internal solution)
	InternalSolutionDivision *int `json:"InternalSolutionDivision,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// Name: Name of the solution link
	Name *string `json:"Name,omitempty"`

	// OtherExternalSolutionName: Name of the custom external solution (mandatory for ExternalOther solution)
	OtherExternalSolutionName *string `json:"OtherExternalSolutionName,omitempty"`

	// SolutionType: Type of solution: 0 - Internal(EOL), 1 - External(Wellknown solution), 2 - ExternalOther
	SolutionType *int `json:"SolutionType,omitempty"`

	// Status: Link status: 0 - Active, 1 - Inactive, 2 -Archived
	Status *int `json:"Status,omitempty"`
}

// List the SolutionLinks entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SolutionLinksEndpoint) List(ctx context.Context, division int, all bool) ([]*SolutionLinks, error) {
	var entities []*SolutionLinks
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/accountancy/SolutionLinks?$select=*", division) // #nosec
	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
