// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package project

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// TimeAndBillingItemDetailsEndpoint is responsible for communicating with
// the TimeAndBillingItemDetails endpoint of the Project service.
type TimeAndBillingItemDetailsEndpoint service

// TimeAndBillingItemDetails:
// Service: Project
// Entity: TimeAndBillingItemDetails
// URL: /api/v1/{division}/read/project/TimeAndBillingItemDetails
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ReadProjectTimeAndBillingItemDetails
type TimeAndBillingItemDetails struct {
	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// Code: Item code
	Code *string `json:"Code,omitempty"`

	// Description: Description of the item code
	Description *string `json:"Description,omitempty"`

	// IsFractionAllowedItem: Indicates if fractions are allowed for quantities of this item
	IsFractionAllowedItem *bool `json:"IsFractionAllowedItem,omitempty"`

	// IsSalesItem: Indicates if the item can be sold
	IsSalesItem *bool `json:"IsSalesItem,omitempty"`

	// SalesCurrency: Sales currency code
	SalesCurrency *string `json:"SalesCurrency,omitempty"`

	// SalesPrice: Sales price
	SalesPrice *float64 `json:"SalesPrice,omitempty"`
}

// List the TimeAndBillingItemDetails entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *TimeAndBillingItemDetailsEndpoint) List(ctx context.Context, division int, all bool) ([]*TimeAndBillingItemDetails, error) {
	var entities []*TimeAndBillingItemDetails
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/read/project/TimeAndBillingItemDetails?$select=*", division) // #nosec
	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
