// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package mailbox

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// MailboxesEndpoint is responsible for communicating with
// the Mailboxes endpoint of the Mailbox service.
type MailboxesEndpoint service

// Mailboxes:
// Service: Mailbox
// Entity: Mailboxes
// URL: /api/v1/{division}/mailbox/Mailboxes
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=MailboxMailboxes
type Mailboxes struct {
	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// Account: The account this mailbox belongs to. Can be empty if the owner of the mailbox isn&#39;t an Exact Online customer yet
	Account *types.GUID `json:"Account,omitempty"`

	// AccountName: Name of Account
	AccountName *string `json:"AccountName,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Description: Extra description of the mailbox
	Description *string `json:"Description,omitempty"`

	// ForDivision: Only used when this mailbox is used for one specific administration, for example invoices to this mailbox will only be booked in this administration
	ForDivision *int `json:"ForDivision,omitempty"`

	// ForDivisionDescription: Description of ForDivision
	ForDivisionDescription *string `json:"ForDivisionDescription,omitempty"`

	// Mailbox: E-mail address-like format, for example johndoe@exactonline.nl
	Mailbox *string `json:"Mailbox,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Publish: Customers can decide if they want this mailbox to be visible by all. i.e. some other customer can see this in address maintenance for digital postbox of type Exact
	Publish *byte `json:"Publish,omitempty"`

	// Type: Type of mailbox. Exact / Government / Manual
	Type *int `json:"Type,omitempty"`

	// ValidFrom: Date that this mailbox became valid
	ValidFrom *types.Date `json:"ValidFrom,omitempty"`

	// ValidTo: Date that this mailbox will not be valid anymore
	ValidTo *types.Date `json:"ValidTo,omitempty"`
}

func (s *Mailboxes) GetIdentifier() types.GUID {
	return *s.ID
}

// List the Mailboxes entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *MailboxesEndpoint) List(ctx context.Context, division int, all bool) ([]*Mailboxes, error) {
	var entities []*Mailboxes
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/mailbox/Mailboxes?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
