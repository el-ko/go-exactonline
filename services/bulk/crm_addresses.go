// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package bulk

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// CRMAddressesEndpoint is responsible for communicating with
// the CRMAddresses endpoint of the Bulk service.
type CRMAddressesEndpoint service

// CRMAddresses:
// Service: Bulk
// Entity: CRMAddresses
// URL: /api/v1/{division}/bulk/CRM/Addresses
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=BulkCRMAddresses
type CRMAddresses struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// Account: Edm.Guid
	Account *types.GUID `json:"Account,omitempty"`

	// AccountIsSupplier: Edm.Boolean
	AccountIsSupplier *bool `json:"AccountIsSupplier,omitempty"`

	// AccountName: Edm.String
	AccountName *string `json:"AccountName,omitempty"`

	// AddressLine1: Edm.String
	AddressLine1 *string `json:"AddressLine1,omitempty"`

	// AddressLine2: Edm.String
	AddressLine2 *string `json:"AddressLine2,omitempty"`

	// AddressLine3: Edm.String
	AddressLine3 *string `json:"AddressLine3,omitempty"`

	// City: Edm.String
	City *string `json:"City,omitempty"`

	// Contact: Edm.Guid
	Contact *types.GUID `json:"Contact,omitempty"`

	// ContactName: Edm.String
	ContactName *string `json:"ContactName,omitempty"`

	// Country: Edm.String
	Country *string `json:"Country,omitempty"`

	// CountryName: Edm.String
	CountryName *string `json:"CountryName,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// CustomField: Edm.String
	CustomField *string `json:"CustomField,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// Fax: Edm.String
	Fax *string `json:"Fax,omitempty"`

	// FreeBoolField_01: Edm.Boolean
	FreeBoolField_01 *bool `json:"FreeBoolField_01,omitempty"`

	// FreeBoolField_02: Edm.Boolean
	FreeBoolField_02 *bool `json:"FreeBoolField_02,omitempty"`

	// FreeBoolField_03: Edm.Boolean
	FreeBoolField_03 *bool `json:"FreeBoolField_03,omitempty"`

	// FreeBoolField_04: Edm.Boolean
	FreeBoolField_04 *bool `json:"FreeBoolField_04,omitempty"`

	// FreeBoolField_05: Edm.Boolean
	FreeBoolField_05 *bool `json:"FreeBoolField_05,omitempty"`

	// FreeDateField_01: Edm.DateTime
	FreeDateField_01 *types.Date `json:"FreeDateField_01,omitempty"`

	// FreeDateField_02: Edm.DateTime
	FreeDateField_02 *types.Date `json:"FreeDateField_02,omitempty"`

	// FreeDateField_03: Edm.DateTime
	FreeDateField_03 *types.Date `json:"FreeDateField_03,omitempty"`

	// FreeDateField_04: Edm.DateTime
	FreeDateField_04 *types.Date `json:"FreeDateField_04,omitempty"`

	// FreeDateField_05: Edm.DateTime
	FreeDateField_05 *types.Date `json:"FreeDateField_05,omitempty"`

	// FreeNumberField_01: Edm.Double
	FreeNumberField_01 *float64 `json:"FreeNumberField_01,omitempty"`

	// FreeNumberField_02: Edm.Double
	FreeNumberField_02 *float64 `json:"FreeNumberField_02,omitempty"`

	// FreeNumberField_03: Edm.Double
	FreeNumberField_03 *float64 `json:"FreeNumberField_03,omitempty"`

	// FreeNumberField_04: Edm.Double
	FreeNumberField_04 *float64 `json:"FreeNumberField_04,omitempty"`

	// FreeNumberField_05: Edm.Double
	FreeNumberField_05 *float64 `json:"FreeNumberField_05,omitempty"`

	// FreeTextField_01: Edm.String
	FreeTextField_01 *string `json:"FreeTextField_01,omitempty"`

	// FreeTextField_02: Edm.String
	FreeTextField_02 *string `json:"FreeTextField_02,omitempty"`

	// FreeTextField_03: Edm.String
	FreeTextField_03 *string `json:"FreeTextField_03,omitempty"`

	// FreeTextField_04: Edm.String
	FreeTextField_04 *string `json:"FreeTextField_04,omitempty"`

	// FreeTextField_05: Edm.String
	FreeTextField_05 *string `json:"FreeTextField_05,omitempty"`

	// Mailbox: Edm.String
	Mailbox *string `json:"Mailbox,omitempty"`

	// Main: Edm.Boolean
	Main *bool `json:"Main,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// NicNumber: Edm.String
	NicNumber *string `json:"NicNumber,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// Phone: Edm.String
	Phone *string `json:"Phone,omitempty"`

	// PhoneExtension: Edm.String
	PhoneExtension *string `json:"PhoneExtension,omitempty"`

	// Postcode: Edm.String
	Postcode *string `json:"Postcode,omitempty"`

	// Source: Edm.Byte
	Source *byte `json:"Source,omitempty"`

	// State: Edm.String
	State *string `json:"State,omitempty"`

	// StateDescription: Edm.String
	StateDescription *string `json:"StateDescription,omitempty"`

	// Type: Edm.Int16
	Type *int `json:"Type,omitempty"`

	// Warehouse: Edm.Guid
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// WarehouseCode: Edm.String
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription: Edm.String
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`
}

func (e *CRMAddresses) GetPrimary() *types.GUID {
	return e.ID
}

func (s *CRMAddressesEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "CRM/Addresses", method)
}

// List the CRMAddresses entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *CRMAddressesEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*CRMAddresses, error) {
	var entities []*CRMAddresses
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/bulk/CRM/Addresses", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the CRMAddresses entitiy in the provided division.
func (s *CRMAddressesEndpoint) Get(ctx context.Context, division int, id *types.GUID) (*CRMAddresses, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/bulk/CRM/Addresses", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &CRMAddresses{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
