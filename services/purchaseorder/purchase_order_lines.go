// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package purchaseorder

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// PurchaseOrderLinesEndpoint is responsible for communicating with
// the PurchaseOrderLines endpoint of the PurchaseOrder service.
type PurchaseOrderLinesEndpoint service

// PurchaseOrderLines:
// Service: PurchaseOrder
// Entity: PurchaseOrderLines
// URL: /api/v1/{division}/purchaseorder/PurchaseOrderLines
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=PurchaseOrderPurchaseOrderLines
type PurchaseOrderLines struct {
	// ID:
	ID *types.GUID `json:"ID,omitempty"`

	// AmountDC:
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountFC:
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// CostCenter:
	CostCenter *string `json:"CostCenter,omitempty"`

	// CostCenterDescription:
	CostCenterDescription *string `json:"CostCenterDescription,omitempty"`

	// CostUnit:
	CostUnit *string `json:"CostUnit,omitempty"`

	// CostUnitDescription:
	CostUnitDescription *string `json:"CostUnitDescription,omitempty"`

	// Created:
	Created *types.Date `json:"Created,omitempty"`

	// Creator:
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Description:
	Description *string `json:"Description,omitempty"`

	// Discount:
	Discount *float64 `json:"Discount,omitempty"`

	// Division:
	Division *int `json:"Division,omitempty"`

	// Expense:
	Expense *types.GUID `json:"Expense,omitempty"`

	// ExpenseDescription:
	ExpenseDescription *string `json:"ExpenseDescription,omitempty"`

	// InStock:
	InStock *float64 `json:"InStock,omitempty"`

	// InvoicedQuantity:
	InvoicedQuantity *float64 `json:"InvoicedQuantity,omitempty"`

	// Item:
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode:
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription:
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// ItemDivisable:
	ItemDivisable *bool `json:"ItemDivisable,omitempty"`

	// LineNumber:
	LineNumber *int `json:"LineNumber,omitempty"`

	// Modified:
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier:
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// NetPrice:
	NetPrice *float64 `json:"NetPrice,omitempty"`

	// Notes:
	Notes *string `json:"Notes,omitempty"`

	// Project:
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectCode:
	ProjectCode *string `json:"ProjectCode,omitempty"`

	// ProjectDescription:
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// ProjectedStock:
	ProjectedStock *float64 `json:"ProjectedStock,omitempty"`

	// PurchaseOrderID:
	PurchaseOrderID *types.GUID `json:"PurchaseOrderID,omitempty"`

	// Quantity:
	Quantity *float64 `json:"Quantity,omitempty"`

	// QuantityInPurchaseUnits:
	QuantityInPurchaseUnits *float64 `json:"QuantityInPurchaseUnits,omitempty"`

	// Rebill:
	Rebill *bool `json:"Rebill,omitempty"`

	// ReceiptDate:
	ReceiptDate *types.Date `json:"ReceiptDate,omitempty"`

	// ReceivedQuantity:
	ReceivedQuantity *float64 `json:"ReceivedQuantity,omitempty"`

	// SalesOrder:
	SalesOrder *types.GUID `json:"SalesOrder,omitempty"`

	// SalesOrderLine:
	SalesOrderLine *types.GUID `json:"SalesOrderLine,omitempty"`

	// SalesOrderLineNumber:
	SalesOrderLineNumber *int `json:"SalesOrderLineNumber,omitempty"`

	// SalesOrderNumber:
	SalesOrderNumber *int `json:"SalesOrderNumber,omitempty"`

	// SupplierItemCode:
	SupplierItemCode *string `json:"SupplierItemCode,omitempty"`

	// SupplierItemCopyRemarks:
	SupplierItemCopyRemarks *byte `json:"SupplierItemCopyRemarks,omitempty"`

	// Unit:
	Unit *string `json:"Unit,omitempty"`

	// UnitDescription:
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// UnitPrice:
	UnitPrice *float64 `json:"UnitPrice,omitempty"`

	// VATAmount:
	VATAmount *float64 `json:"VATAmount,omitempty"`

	// VATCode:
	VATCode *string `json:"VATCode,omitempty"`

	// VATDescription:
	VATDescription *string `json:"VATDescription,omitempty"`

	// VATPercentage:
	VATPercentage *float64 `json:"VATPercentage,omitempty"`
}

func (s *PurchaseOrderLines) GetIdentifier() types.GUID {
	return *s.ID
}

// List the PurchaseOrderLines entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *PurchaseOrderLinesEndpoint) List(ctx context.Context, division int, all bool) ([]*PurchaseOrderLines, error) {
	var entities []*PurchaseOrderLines
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/purchaseorder/PurchaseOrderLines?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
