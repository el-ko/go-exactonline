// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package manufacturing

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// SubOrderReversalsEndpoint is responsible for communicating with
// the SubOrderReversals endpoint of the Manufacturing service.
type SubOrderReversalsEndpoint service

// SubOrderReversals:
// Service: Manufacturing
// Entity: SubOrderReversals
// URL: /api/v1/{division}/manufacturing/SubOrderReversals
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ManufacturingSubOrderReversals
type SubOrderReversals struct {
	// MaterialReversalStockTransactionId: MaterialReversal.StockTransactionId related to this SubOrderReversal&#39;s MaterialReversal
	MaterialReversalStockTransactionId *types.GUID `json:"MaterialReversalStockTransactionId,omitempty"`

	// CreatedBy: ID of creating user
	CreatedBy *types.GUID `json:"CreatedBy,omitempty"`

	// CreatedByFullName: Name of the creating user
	CreatedByFullName *string `json:"CreatedByFullName,omitempty"`

	// CreatedDate: Creation date of this SubOrderReversal
	CreatedDate *types.Date `json:"CreatedDate,omitempty"`

	// IsBatch: Does the SubOrderReversal&#39;s item use batch numbers
	IsBatch *byte `json:"IsBatch,omitempty"`

	// IsFractionAllowedItem: Indicates if fractions (for example 0.35) are allowed for quantities of the SubOrderReversal&#39;s item
	IsFractionAllowedItem *byte `json:"IsFractionAllowedItem,omitempty"`

	// IsSerial: Does the SubOrderReversal&#39;s item use serial numbers
	IsSerial *byte `json:"IsSerial,omitempty"`

	// Item: Item reversed
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Code of item reversed
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Description of item reversed
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// ItemPictureUrl: Picture url of shop order item
	ItemPictureUrl *string `json:"ItemPictureUrl,omitempty"`

	// Note: Notes logged with this reversal
	Note *string `json:"Note,omitempty"`

	// OriginalMaterialIssueStockTransactionId: MaterialIssue.StockTransactionId related to this SubOrderReceipt&#39;s original MaterialIssue
	OriginalMaterialIssueStockTransactionId *types.GUID `json:"OriginalMaterialIssueStockTransactionId,omitempty"`

	// OriginalShopOrderReceiptStockTransactionId: ShopOrderReceipt.StockTransactionId related to this SubOrderReceipt&#39;s original ShopOrderReceipt
	OriginalShopOrderReceiptStockTransactionId *types.GUID `json:"OriginalShopOrderReceiptStockTransactionId,omitempty"`

	// ParentShopOrder: Shop order reversed from
	ParentShopOrder *types.GUID `json:"ParentShopOrder,omitempty"`

	// ParentShopOrderNumber: Number of shop order reversed from
	ParentShopOrderNumber *int `json:"ParentShopOrderNumber,omitempty"`

	// Quantity: Quantity of this SubOrderReversal
	Quantity *float64 `json:"Quantity,omitempty"`

	// ShopOrderReversalStockTransactionId: ShopOrderReversal.StockTransactionId related to this SubOrderReversal&#39;s ShopOrderReversal
	ShopOrderReversalStockTransactionId *types.GUID `json:"ShopOrderReversalStockTransactionId,omitempty"`

	// SubShopOrder: Shop order reversed to
	SubShopOrder *types.GUID `json:"SubShopOrder,omitempty"`

	// SubShopOrderNumber: Number of shop order reversed to
	SubShopOrderNumber *int `json:"SubShopOrderNumber,omitempty"`

	// TransactionDate: Effective date of this SubOrderReversal
	TransactionDate *types.Date `json:"TransactionDate,omitempty"`

	// Unit: Unit of measurement abbreviation of this SubOrderReversal&#39;s item
	Unit *string `json:"Unit,omitempty"`

	// UnitDescription: Unit of measurement of this SubOrderReversal&#39;s item
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// Warehouse: ID of warehouse of this SubOrderReversal
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// WarehouseCode: Code of warehouse of this SubOrderReversal
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription: Description of warehouse of this SubOrderReversal
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`
}

// List the SubOrderReversals entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SubOrderReversalsEndpoint) List(ctx context.Context, division int, all bool) ([]*SubOrderReversals, error) {
	var entities []*SubOrderReversals
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/manufacturing/SubOrderReversals?$select=*", division) // #nosec
	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
