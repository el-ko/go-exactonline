// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package manufacturing

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// OperationResourcesEndpoint is responsible for communicating with
// the OperationResources endpoint of the Manufacturing service.
type OperationResourcesEndpoint service

// OperationResources:
// Service: Manufacturing
// Entity: OperationResources
// URL: /api/v1/{division}/manufacturing/OperationResources
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ManufacturingOperationResources
type OperationResources struct {
	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// Account: Reference to Accounts
	Account *types.GUID `json:"Account,omitempty"`

	// AttendedPercentage: Attended percentage
	AttendedPercentage *float64 `json:"AttendedPercentage,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency: Reference to Currencies
	Currency *string `json:"Currency,omitempty"`

	// Division: Division code
	Division *int `json:"Division,omitempty"`

	// EfficiencyPercentage: Efficiency percentage
	EfficiencyPercentage *float64 `json:"EfficiencyPercentage,omitempty"`

	// IsPrimary: Indicates if this is the primary operation of the workcenter
	IsPrimary *byte `json:"IsPrimary,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Operation: Reference to Operations
	Operation *types.GUID `json:"Operation,omitempty"`

	// OperationDescription: Description of Operation
	OperationDescription *string `json:"OperationDescription,omitempty"`

	// PurchaseLeadDays: Lead days from purchase
	PurchaseLeadDays *int `json:"PurchaseLeadDays,omitempty"`

	// PurchaseUnit: Unit of purchased item from supplier
	PurchaseUnit *string `json:"PurchaseUnit,omitempty"`

	// PurchaseVATCode: VAT code used for purchased item from supplier
	PurchaseVATCode *string `json:"PurchaseVATCode,omitempty"`

	// Run: Used in conjuction with RunMethod and EfficiencyPercentage to determine PlannedRunHours
	Run *float64 `json:"Run,omitempty"`

	// RunMethod: Reference to OperationRunMethods
	RunMethod *int `json:"RunMethod,omitempty"`

	// Setup: Used in conjunction with SetupCount and SetupUnit to determine PlannedSetupHours
	Setup *float64 `json:"Setup,omitempty"`

	// SetupUnit: Reference to TimeUnits
	SetupUnit *string `json:"SetupUnit,omitempty"`

	// Type: Reference to RoutingStepTypes
	Type *int `json:"Type,omitempty"`

	// Workcenter: Reference to Workcenter
	Workcenter *types.GUID `json:"Workcenter,omitempty"`

	// WorkcenterDescription: Description of Workcenter
	WorkcenterDescription *string `json:"WorkcenterDescription,omitempty"`
}

// List the OperationResources entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *OperationResourcesEndpoint) List(ctx context.Context, division int, all bool) ([]*OperationResources, error) {
	var entities []*OperationResources
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/manufacturing/OperationResources?$select=*", division) // #nosec
	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
