// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package general

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// CurrenciesEndpoint is responsible for communicating with
// the Currencies endpoint of the General service.
type CurrenciesEndpoint service

// Currencies:
// Service: General
// Entity: Currencies
// URL: /api/v1/{division}/general/Currencies
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=GeneralCurrencies
type Currencies struct {
	// Code: Primary key
	Code *string `json:"Code,omitempty"`

	// AmountPrecision: Amount precision
	AmountPrecision *float64 `json:"AmountPrecision,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Description: Description of the currency
	Description *string `json:"Description,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// PricePrecision: Price precision
	PricePrecision *float64 `json:"PricePrecision,omitempty"`
}

func (s *Currencies) GetIdentifier() string {
	return *s.Code
}

// List the Currencies entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *CurrenciesEndpoint) List(ctx context.Context, division int, all bool) ([]*Currencies, error) {
	var entities []*Currencies
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/general/Currencies?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
