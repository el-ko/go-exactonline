// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package cashflow

import (
	"context"

	"github.com/mcnijman/go-exactonline/types"
)

// AllocationRuleEndpoint is responsible for communicating with
// the AllocationRule endpoint of the Cashflow service.
type AllocationRuleEndpoint service

// AllocationRule:
// Service: Cashflow
// Entity: AllocationRule
// URL: /api/v1/beta/{division}/cashflow/AllocationRule
// HasWebhook: false
// IsInBeta: true
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=CashflowAllocationRule
type AllocationRule struct {
	// ID: Primary key
	ID *types.GUID `json:"ID,omitempty"`

	// Account: The account ID to which the imported bank transaction must be allocated.
	Account *types.GUID `json:"Account,omitempty"`

	// AccountBankAccount: The bank account number that should be in the imported bank transaction in order to perform the automatic allocation on bank account. Either bank account or word must be filled.
	AccountBankAccount *string `json:"AccountBankAccount,omitempty"`

	// Costcenter: The cost centre that will be allocated to the imported bank transaction.
	Costcenter *string `json:"Costcenter,omitempty"`

	// Costunit: The cost unit that will be allocated to the imported bank transaction.
	Costunit *string `json:"Costunit,omitempty"`

	// Created: Creation date
	Created *types.Date `json:"Created,omitempty"`

	// Creator: User ID of creator
	Creator *types.GUID `json:"Creator,omitempty"`

	// Division: Division Code
	Division *int `json:"Division,omitempty"`

	// GLAccount: The G/L account to which the imported bank transaction must be allocated.
	GLAccount *types.GUID `json:"GLAccount,omitempty"`

	// Modified: Last modified date
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: User ID of modifier
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// VATCode: The VAT code that will be allocated to the imported bank transaction.
	VATCode *string `json:"VATCode,omitempty"`

	// Words: Words for the automatic allocation. Either bank account or word must be filled.
	Words *string `json:"Words,omitempty"`
}

func (s *AllocationRule) GetIdentifier() types.GUID {
	return *s.ID
}

// List the AllocationRule entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *AllocationRuleEndpoint) List(ctx context.Context, division int, all bool) ([]*AllocationRule, error) {
	var entities []*AllocationRule
	u, err := s.client.ResolvePathWithDivision("/api/v1/beta/{division}/cashflow/AllocationRule?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
