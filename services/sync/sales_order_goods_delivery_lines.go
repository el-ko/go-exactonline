// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"
	"encoding/json"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// SalesOrderGoodsDeliveryLinesEndpoint is responsible for communicating with
// the SalesOrderGoodsDeliveryLines endpoint of the Sync service.
type SalesOrderGoodsDeliveryLinesEndpoint service

// SalesOrderGoodsDeliveryLines:
// Service: Sync
// Entity: SalesOrderGoodsDeliveryLines
// URL: /api/v1/{division}/sync/SalesOrder/GoodsDeliveryLines
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncSalesOrderGoodsDeliveryLines
type SalesOrderGoodsDeliveryLines struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// BatchNumbers: StockBatchNumbers
	BatchNumbers *json.RawMessage `json:"BatchNumbers,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// CustomerItemCode: Edm.String
	CustomerItemCode *string `json:"CustomerItemCode,omitempty"`

	// DeliveryDate: Edm.DateTime
	DeliveryDate *types.Date `json:"DeliveryDate,omitempty"`

	// Description: Edm.String
	Description *string `json:"Description,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// EntryID: Edm.Guid
	EntryID *types.GUID `json:"EntryID,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// LineNumber: Edm.Int32
	LineNumber *int `json:"LineNumber,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// QuantityDelivered: Edm.Double
	QuantityDelivered *float64 `json:"QuantityDelivered,omitempty"`

	// QuantityOrdered: Edm.Double
	QuantityOrdered *float64 `json:"QuantityOrdered,omitempty"`

	// SalesOrderLineID: Edm.Guid
	SalesOrderLineID *types.GUID `json:"SalesOrderLineID,omitempty"`

	// SalesOrderLineNumber: Edm.Int32
	SalesOrderLineNumber *int `json:"SalesOrderLineNumber,omitempty"`

	// SalesOrderNumber: Edm.Int32
	SalesOrderNumber *int `json:"SalesOrderNumber,omitempty"`

	// SerialNumbers: StockSerialNumbers
	SerialNumbers *json.RawMessage `json:"SerialNumbers,omitempty"`

	// StorageLocation: Edm.Guid
	StorageLocation *types.GUID `json:"StorageLocation,omitempty"`

	// StorageLocationCode: Edm.String
	StorageLocationCode *string `json:"StorageLocationCode,omitempty"`

	// StorageLocationDescription: Edm.String
	StorageLocationDescription *string `json:"StorageLocationDescription,omitempty"`

	// TrackingNumber: Edm.String
	TrackingNumber *string `json:"TrackingNumber,omitempty"`

	// Unitcode: Edm.String
	Unitcode *string `json:"Unitcode,omitempty"`
}

func (e *SalesOrderGoodsDeliveryLines) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *SalesOrderGoodsDeliveryLinesEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "SalesOrder/GoodsDeliveryLines", method)
}

// List the SalesOrderGoodsDeliveryLines entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesOrderGoodsDeliveryLinesEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*SalesOrderGoodsDeliveryLines, error) {
	var entities []*SalesOrderGoodsDeliveryLines
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/GoodsDeliveryLines", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the SalesOrderGoodsDeliveryLines entitiy in the provided division.
func (s *SalesOrderGoodsDeliveryLinesEndpoint) Get(ctx context.Context, division int, id *int64) (*SalesOrderGoodsDeliveryLines, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/GoodsDeliveryLines", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &SalesOrderGoodsDeliveryLines{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
