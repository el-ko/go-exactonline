// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// ManufacturingShopOrdersEndpoint is responsible for communicating with
// the ManufacturingShopOrders endpoint of the Sync service.
type ManufacturingShopOrdersEndpoint service

// ManufacturingShopOrders:
// Service: Sync
// Entity: ManufacturingShopOrders
// URL: /api/v1/{division}/sync/Manufacturing/ShopOrders
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncManufacturingShopOrders
type ManufacturingShopOrders struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// CADDrawingURL: Edm.String
	CADDrawingURL *string `json:"CADDrawingURL,omitempty"`

	// Costcenter: Edm.String
	Costcenter *string `json:"Costcenter,omitempty"`

	// CostcenterDescription: Edm.String
	CostcenterDescription *string `json:"CostcenterDescription,omitempty"`

	// Costunit: Edm.String
	Costunit *string `json:"Costunit,omitempty"`

	// CostunitDescription: Edm.String
	CostunitDescription *string `json:"CostunitDescription,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Description: Edm.String
	Description *string `json:"Description,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// EntryDate: Edm.DateTime
	EntryDate *types.Date `json:"EntryDate,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// IsBatch: Edm.Byte
	IsBatch *byte `json:"IsBatch,omitempty"`

	// IsFractionAllowedItem: Edm.Byte
	IsFractionAllowedItem *byte `json:"IsFractionAllowedItem,omitempty"`

	// IsInPlanning: Edm.Byte
	IsInPlanning *byte `json:"IsInPlanning,omitempty"`

	// IsOnHold: Edm.Byte
	IsOnHold *byte `json:"IsOnHold,omitempty"`

	// IsReleased: Edm.Byte
	IsReleased *byte `json:"IsReleased,omitempty"`

	// IsSerial: Edm.Byte
	IsSerial *byte `json:"IsSerial,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// ItemPictureUrl: Edm.String
	ItemPictureUrl *string `json:"ItemPictureUrl,omitempty"`

	// ItemVersion: Edm.Guid
	ItemVersion *types.GUID `json:"ItemVersion,omitempty"`

	// ItemVersionDescription: Edm.String
	ItemVersionDescription *string `json:"ItemVersionDescription,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// PlannedDate: Edm.DateTime
	PlannedDate *types.Date `json:"PlannedDate,omitempty"`

	// PlannedQuantity: Edm.Double
	PlannedQuantity *float64 `json:"PlannedQuantity,omitempty"`

	// PlannedStartDate: Edm.DateTime
	PlannedStartDate *types.Date `json:"PlannedStartDate,omitempty"`

	// ProducedQuantity: Edm.Double
	ProducedQuantity *float64 `json:"ProducedQuantity,omitempty"`

	// ProductionLeadDays: Edm.Int32
	ProductionLeadDays *int `json:"ProductionLeadDays,omitempty"`

	// Project: Edm.Guid
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectDescription: Edm.String
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// ReadyToShipQuantity: Edm.Double
	ReadyToShipQuantity *float64 `json:"ReadyToShipQuantity,omitempty"`

	// SalesOrderLineCount: Edm.Int32
	SalesOrderLineCount *int `json:"SalesOrderLineCount,omitempty"`

	// SelectionCode: Edm.Guid
	SelectionCode *types.GUID `json:"SelectionCode,omitempty"`

	// SelectionCodeCode: Edm.String
	SelectionCodeCode *string `json:"SelectionCodeCode,omitempty"`

	// SelectionCodeDescription: Edm.String
	SelectionCodeDescription *string `json:"SelectionCodeDescription,omitempty"`

	// ShopOrderByProductPlanBackflushCount: Edm.Int32
	ShopOrderByProductPlanBackflushCount *int `json:"ShopOrderByProductPlanBackflushCount,omitempty"`

	// ShopOrderByProductPlanCount: Edm.Int32
	ShopOrderByProductPlanCount *int `json:"ShopOrderByProductPlanCount,omitempty"`

	// ShopOrderMain: Edm.Guid
	ShopOrderMain *types.GUID `json:"ShopOrderMain,omitempty"`

	// ShopOrderMainNumber: Edm.Int32
	ShopOrderMainNumber *int `json:"ShopOrderMainNumber,omitempty"`

	// ShopOrderMaterialPlanBackflushCount: Edm.Int32
	ShopOrderMaterialPlanBackflushCount *int `json:"ShopOrderMaterialPlanBackflushCount,omitempty"`

	// ShopOrderMaterialPlanCount: Edm.Int32
	ShopOrderMaterialPlanCount *int `json:"ShopOrderMaterialPlanCount,omitempty"`

	// ShopOrderNumber: Edm.Int32
	ShopOrderNumber *int `json:"ShopOrderNumber,omitempty"`

	// ShopOrderNumberString: Edm.String
	ShopOrderNumberString *string `json:"ShopOrderNumberString,omitempty"`

	// ShopOrderParent: Edm.Guid
	ShopOrderParent *types.GUID `json:"ShopOrderParent,omitempty"`

	// ShopOrderParentNumber: Edm.Int32
	ShopOrderParentNumber *int `json:"ShopOrderParentNumber,omitempty"`

	// ShopOrderRoutingStepPlanCount: Edm.Int32
	ShopOrderRoutingStepPlanCount *int `json:"ShopOrderRoutingStepPlanCount,omitempty"`

	// Status: Edm.Int32
	Status *int `json:"Status,omitempty"`

	// SubShopOrderCount: Edm.Int32
	SubShopOrderCount *int `json:"SubShopOrderCount,omitempty"`

	// Type: Edm.Int32
	Type *int `json:"Type,omitempty"`

	// Unit: Edm.String
	Unit *string `json:"Unit,omitempty"`

	// UnitDescription: Edm.String
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// Warehouse: Edm.Guid
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// YourRef: Edm.String
	YourRef *string `json:"YourRef,omitempty"`
}

func (e *ManufacturingShopOrders) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *ManufacturingShopOrdersEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "Manufacturing/ShopOrders", method)
}

// List the ManufacturingShopOrders entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ManufacturingShopOrdersEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*ManufacturingShopOrders, error) {
	var entities []*ManufacturingShopOrders
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/Manufacturing/ShopOrders", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the ManufacturingShopOrders entitiy in the provided division.
func (s *ManufacturingShopOrdersEndpoint) Get(ctx context.Context, division int, id *int64) (*ManufacturingShopOrders, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/Manufacturing/ShopOrders", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &ManufacturingShopOrders{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
