// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"
	"encoding/json"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// CRMAccountsEndpoint is responsible for communicating with
// the CRMAccounts endpoint of the Sync service.
type CRMAccountsEndpoint service

// CRMAccounts:
// Service: Sync
// Entity: CRMAccounts
// URL: /api/v1/{division}/sync/CRM/Accounts
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncCRMAccounts
type CRMAccounts struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// Accountant: Edm.Guid
	Accountant *types.GUID `json:"Accountant,omitempty"`

	// AccountManager: Edm.Guid
	AccountManager *types.GUID `json:"AccountManager,omitempty"`

	// AccountManagerFullName: Edm.String
	AccountManagerFullName *string `json:"AccountManagerFullName,omitempty"`

	// AccountManagerHID: Edm.Int32
	AccountManagerHID *int `json:"AccountManagerHID,omitempty"`

	// ActivitySector: Edm.Guid
	ActivitySector *types.GUID `json:"ActivitySector,omitempty"`

	// ActivitySubSector: Edm.Guid
	ActivitySubSector *types.GUID `json:"ActivitySubSector,omitempty"`

	// AddressLine1: Edm.String
	AddressLine1 *string `json:"AddressLine1,omitempty"`

	// AddressLine2: Edm.String
	AddressLine2 *string `json:"AddressLine2,omitempty"`

	// AddressLine3: Edm.String
	AddressLine3 *string `json:"AddressLine3,omitempty"`

	// AddressSource: Edm.Byte
	AddressSource *byte `json:"AddressSource,omitempty"`

	// AutomaticProcessProposedEntry: Edm.Byte
	AutomaticProcessProposedEntry *byte `json:"AutomaticProcessProposedEntry,omitempty"`

	// BankAccounts: BankAccounts
	BankAccounts *json.RawMessage `json:"BankAccounts,omitempty"`

	// Blocked: Edm.Boolean
	Blocked *bool `json:"Blocked,omitempty"`

	// BRIN: Edm.Guid
	BRIN *types.GUID `json:"BRIN,omitempty"`

	// BSN: Edm.String
	BSN *string `json:"BSN,omitempty"`

	// BusinessType: Edm.Guid
	BusinessType *types.GUID `json:"BusinessType,omitempty"`

	// CanDropShip: Edm.Boolean
	CanDropShip *bool `json:"CanDropShip,omitempty"`

	// ChamberOfCommerce: Edm.String
	ChamberOfCommerce *string `json:"ChamberOfCommerce,omitempty"`

	// City: Edm.String
	City *string `json:"City,omitempty"`

	// Classification: Edm.String
	Classification *string `json:"Classification,omitempty"`

	// Classification1: Edm.Guid
	Classification1 *types.GUID `json:"Classification1,omitempty"`

	// Classification2: Edm.Guid
	Classification2 *types.GUID `json:"Classification2,omitempty"`

	// Classification3: Edm.Guid
	Classification3 *types.GUID `json:"Classification3,omitempty"`

	// Classification4: Edm.Guid
	Classification4 *types.GUID `json:"Classification4,omitempty"`

	// Classification5: Edm.Guid
	Classification5 *types.GUID `json:"Classification5,omitempty"`

	// Classification6: Edm.Guid
	Classification6 *types.GUID `json:"Classification6,omitempty"`

	// Classification7: Edm.Guid
	Classification7 *types.GUID `json:"Classification7,omitempty"`

	// Classification8: Edm.Guid
	Classification8 *types.GUID `json:"Classification8,omitempty"`

	// ClassificationDescription: Edm.String
	ClassificationDescription *string `json:"ClassificationDescription,omitempty"`

	// Code: Edm.String
	Code *string `json:"Code,omitempty"`

	// CodeAtSupplier: Edm.String
	CodeAtSupplier *string `json:"CodeAtSupplier,omitempty"`

	// CompanySize: Edm.Guid
	CompanySize *types.GUID `json:"CompanySize,omitempty"`

	// ConsolidationScenario: Edm.Byte
	ConsolidationScenario *byte `json:"ConsolidationScenario,omitempty"`

	// ControlledDate: Edm.DateTime
	ControlledDate *types.Date `json:"ControlledDate,omitempty"`

	// Costcenter: Edm.String
	Costcenter *string `json:"Costcenter,omitempty"`

	// CostcenterDescription: Edm.String
	CostcenterDescription *string `json:"CostcenterDescription,omitempty"`

	// CostPaid: Edm.Byte
	CostPaid *byte `json:"CostPaid,omitempty"`

	// Country: Edm.String
	Country *string `json:"Country,omitempty"`

	// CountryName: Edm.String
	CountryName *string `json:"CountryName,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// CreditLinePurchase: Edm.Double
	CreditLinePurchase *float64 `json:"CreditLinePurchase,omitempty"`

	// CreditLineSales: Edm.Double
	CreditLineSales *float64 `json:"CreditLineSales,omitempty"`

	// Currency: Edm.String
	Currency *string `json:"Currency,omitempty"`

	// CustomerSince: Edm.DateTime
	CustomerSince *types.Date `json:"CustomerSince,omitempty"`

	// CustomField: Edm.String
	CustomField *string `json:"CustomField,omitempty"`

	// DatevCreditorCode: Edm.String
	DatevCreditorCode *string `json:"DatevCreditorCode,omitempty"`

	// DatevDebtorCode: Edm.String
	DatevDebtorCode *string `json:"DatevDebtorCode,omitempty"`

	// DeliveryAdvice: Edm.Byte
	DeliveryAdvice *byte `json:"DeliveryAdvice,omitempty"`

	// DiscountPurchase: Edm.Double
	DiscountPurchase *float64 `json:"DiscountPurchase,omitempty"`

	// DiscountSales: Edm.Double
	DiscountSales *float64 `json:"DiscountSales,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// Document: Edm.Guid
	Document *types.GUID `json:"Document,omitempty"`

	// DunsNumber: Edm.String
	DunsNumber *string `json:"DunsNumber,omitempty"`

	// Email: Edm.String
	Email *string `json:"Email,omitempty"`

	// EnableSalesPaymentLink: Edm.Boolean
	EnableSalesPaymentLink *bool `json:"EnableSalesPaymentLink,omitempty"`

	// EndDate: Edm.DateTime
	EndDate *types.Date `json:"EndDate,omitempty"`

	// EORINumber: Edm.String
	EORINumber *string `json:"EORINumber,omitempty"`

	// EstablishedDate: Edm.DateTime
	EstablishedDate *types.Date `json:"EstablishedDate,omitempty"`

	// Fax: Edm.String
	Fax *string `json:"Fax,omitempty"`

	// GLAccountPurchase: Edm.Guid
	GLAccountPurchase *types.GUID `json:"GLAccountPurchase,omitempty"`

	// GLAccountSales: Edm.Guid
	GLAccountSales *types.GUID `json:"GLAccountSales,omitempty"`

	// GLAP: Edm.Guid
	GLAP *types.GUID `json:"GLAP,omitempty"`

	// GLAR: Edm.Guid
	GLAR *types.GUID `json:"GLAR,omitempty"`

	// GlnNumber: Edm.String
	GlnNumber *string `json:"GlnNumber,omitempty"`

	// HasWithholdingTaxSales: Edm.Boolean
	HasWithholdingTaxSales *bool `json:"HasWithholdingTaxSales,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// IgnoreDatevWarningMessage: Edm.Boolean
	IgnoreDatevWarningMessage *bool `json:"IgnoreDatevWarningMessage,omitempty"`

	// IncotermAddressPurchase: Edm.String
	IncotermAddressPurchase *string `json:"IncotermAddressPurchase,omitempty"`

	// IncotermAddressSales: Edm.String
	IncotermAddressSales *string `json:"IncotermAddressSales,omitempty"`

	// IncotermCodePurchase: Edm.String
	IncotermCodePurchase *string `json:"IncotermCodePurchase,omitempty"`

	// IncotermCodeSales: Edm.String
	IncotermCodeSales *string `json:"IncotermCodeSales,omitempty"`

	// IncotermVersionPurchase: Edm.Int16
	IncotermVersionPurchase *int `json:"IncotermVersionPurchase,omitempty"`

	// IncotermVersionSales: Edm.Int16
	IncotermVersionSales *int `json:"IncotermVersionSales,omitempty"`

	// IntraStatArea: Edm.String
	IntraStatArea *string `json:"IntraStatArea,omitempty"`

	// IntraStatDeliveryTerm: Edm.String
	IntraStatDeliveryTerm *string `json:"IntraStatDeliveryTerm,omitempty"`

	// IntraStatSystem: Edm.String
	IntraStatSystem *string `json:"IntraStatSystem,omitempty"`

	// IntraStatTransactionA: Edm.String
	IntraStatTransactionA *string `json:"IntraStatTransactionA,omitempty"`

	// IntraStatTransactionB: Edm.String
	IntraStatTransactionB *string `json:"IntraStatTransactionB,omitempty"`

	// IntraStatTransportMethod: Edm.String
	IntraStatTransportMethod *string `json:"IntraStatTransportMethod,omitempty"`

	// InvoiceAccount: Edm.Guid
	InvoiceAccount *types.GUID `json:"InvoiceAccount,omitempty"`

	// InvoiceAccountCode: Edm.String
	InvoiceAccountCode *string `json:"InvoiceAccountCode,omitempty"`

	// InvoiceAccountName: Edm.String
	InvoiceAccountName *string `json:"InvoiceAccountName,omitempty"`

	// InvoiceAttachmentType: Edm.Int32
	InvoiceAttachmentType *int `json:"InvoiceAttachmentType,omitempty"`

	// InvoicingMethod: Edm.Int32
	InvoicingMethod *int `json:"InvoicingMethod,omitempty"`

	// IsAccountant: Edm.Byte
	IsAccountant *byte `json:"IsAccountant,omitempty"`

	// IsAgency: Edm.Byte
	IsAgency *byte `json:"IsAgency,omitempty"`

	// IsAnonymised: Edm.Byte
	IsAnonymised *byte `json:"IsAnonymised,omitempty"`

	// IsBank: Edm.Boolean
	IsBank *bool `json:"IsBank,omitempty"`

	// IsCompetitor: Edm.Byte
	IsCompetitor *byte `json:"IsCompetitor,omitempty"`

	// IsExtraDuty: Edm.Boolean
	IsExtraDuty *bool `json:"IsExtraDuty,omitempty"`

	// IsMailing: Edm.Byte
	IsMailing *byte `json:"IsMailing,omitempty"`

	// IsMember: Edm.Boolean
	IsMember *bool `json:"IsMember,omitempty"`

	// IsPilot: Edm.Boolean
	IsPilot *bool `json:"IsPilot,omitempty"`

	// IsPurchase: Edm.Boolean
	IsPurchase *bool `json:"IsPurchase,omitempty"`

	// IsReseller: Edm.Boolean
	IsReseller *bool `json:"IsReseller,omitempty"`

	// IsSales: Edm.Boolean
	IsSales *bool `json:"IsSales,omitempty"`

	// IsSupplier: Edm.Boolean
	IsSupplier *bool `json:"IsSupplier,omitempty"`

	// Language: Edm.String
	Language *string `json:"Language,omitempty"`

	// LanguageDescription: Edm.String
	LanguageDescription *string `json:"LanguageDescription,omitempty"`

	// Latitude: Edm.Double
	Latitude *float64 `json:"Latitude,omitempty"`

	// LeadPurpose: Edm.Guid
	LeadPurpose *types.GUID `json:"LeadPurpose,omitempty"`

	// LeadSource: Edm.Guid
	LeadSource *types.GUID `json:"LeadSource,omitempty"`

	// Logo: Edm.Binary
	Logo *[]byte `json:"Logo,omitempty"`

	// LogoFileName: Edm.String
	LogoFileName *string `json:"LogoFileName,omitempty"`

	// LogoThumbnailUrl: Edm.String
	LogoThumbnailUrl *string `json:"LogoThumbnailUrl,omitempty"`

	// LogoUrl: Edm.String
	LogoUrl *string `json:"LogoUrl,omitempty"`

	// Longitude: Edm.Double
	Longitude *float64 `json:"Longitude,omitempty"`

	// MainContact: Edm.Guid
	MainContact *types.GUID `json:"MainContact,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// Name: Edm.String
	Name *string `json:"Name,omitempty"`

	// OINNumber: Edm.String
	OINNumber *string `json:"OINNumber,omitempty"`

	// Parent: Edm.Guid
	Parent *types.GUID `json:"Parent,omitempty"`

	// PayAsYouEarn: Edm.String
	PayAsYouEarn *string `json:"PayAsYouEarn,omitempty"`

	// PaymentConditionPurchase: Edm.String
	PaymentConditionPurchase *string `json:"PaymentConditionPurchase,omitempty"`

	// PaymentConditionPurchaseDescription: Edm.String
	PaymentConditionPurchaseDescription *string `json:"PaymentConditionPurchaseDescription,omitempty"`

	// PaymentConditionSales: Edm.String
	PaymentConditionSales *string `json:"PaymentConditionSales,omitempty"`

	// PaymentConditionSalesDescription: Edm.String
	PaymentConditionSalesDescription *string `json:"PaymentConditionSalesDescription,omitempty"`

	// Phone: Edm.String
	Phone *string `json:"Phone,omitempty"`

	// PhoneExtension: Edm.String
	PhoneExtension *string `json:"PhoneExtension,omitempty"`

	// Postcode: Edm.String
	Postcode *string `json:"Postcode,omitempty"`

	// PriceList: Edm.Guid
	PriceList *types.GUID `json:"PriceList,omitempty"`

	// PurchaseCurrency: Edm.String
	PurchaseCurrency *string `json:"PurchaseCurrency,omitempty"`

	// PurchaseCurrencyDescription: Edm.String
	PurchaseCurrencyDescription *string `json:"PurchaseCurrencyDescription,omitempty"`

	// PurchaseLeadDays: Edm.Int32
	PurchaseLeadDays *int `json:"PurchaseLeadDays,omitempty"`

	// PurchaseVATCode: Edm.String
	PurchaseVATCode *string `json:"PurchaseVATCode,omitempty"`

	// PurchaseVATCodeDescription: Edm.String
	PurchaseVATCodeDescription *string `json:"PurchaseVATCodeDescription,omitempty"`

	// RecepientOfCommissions: Edm.Boolean
	RecepientOfCommissions *bool `json:"RecepientOfCommissions,omitempty"`

	// Remarks: Edm.String
	Remarks *string `json:"Remarks,omitempty"`

	// Reseller: Edm.Guid
	Reseller *types.GUID `json:"Reseller,omitempty"`

	// ResellerCode: Edm.String
	ResellerCode *string `json:"ResellerCode,omitempty"`

	// ResellerName: Edm.String
	ResellerName *string `json:"ResellerName,omitempty"`

	// RSIN: Edm.String
	RSIN *string `json:"RSIN,omitempty"`

	// SalesCurrency: Edm.String
	SalesCurrency *string `json:"SalesCurrency,omitempty"`

	// SalesCurrencyDescription: Edm.String
	SalesCurrencyDescription *string `json:"SalesCurrencyDescription,omitempty"`

	// SalesTaxSchedule: Edm.Guid
	SalesTaxSchedule *types.GUID `json:"SalesTaxSchedule,omitempty"`

	// SalesTaxScheduleCode: Edm.String
	SalesTaxScheduleCode *string `json:"SalesTaxScheduleCode,omitempty"`

	// SalesTaxScheduleDescription: Edm.String
	SalesTaxScheduleDescription *string `json:"SalesTaxScheduleDescription,omitempty"`

	// SalesVATCode: Edm.String
	SalesVATCode *string `json:"SalesVATCode,omitempty"`

	// SalesVATCodeDescription: Edm.String
	SalesVATCodeDescription *string `json:"SalesVATCodeDescription,omitempty"`

	// SearchCode: Edm.String
	SearchCode *string `json:"SearchCode,omitempty"`

	// SecurityLevel: Edm.Int32
	SecurityLevel *int `json:"SecurityLevel,omitempty"`

	// SeparateInvPerProject: Edm.Byte
	SeparateInvPerProject *byte `json:"SeparateInvPerProject,omitempty"`

	// SeparateInvPerSubscription: Edm.Byte
	SeparateInvPerSubscription *byte `json:"SeparateInvPerSubscription,omitempty"`

	// ShippingLeadDays: Edm.Int32
	ShippingLeadDays *int `json:"ShippingLeadDays,omitempty"`

	// ShippingMethod: Edm.Guid
	ShippingMethod *types.GUID `json:"ShippingMethod,omitempty"`

	// ShowRemarkForSales: Edm.Boolean
	ShowRemarkForSales *bool `json:"ShowRemarkForSales,omitempty"`

	// Source: Edm.Byte
	Source *byte `json:"Source,omitempty"`

	// StartDate: Edm.DateTime
	StartDate *types.Date `json:"StartDate,omitempty"`

	// State: Edm.String
	State *string `json:"State,omitempty"`

	// StateName: Edm.String
	StateName *string `json:"StateName,omitempty"`

	// Status: Edm.String
	Status *string `json:"Status,omitempty"`

	// StatusSince: Edm.DateTime
	StatusSince *types.Date `json:"StatusSince,omitempty"`

	// TradeName: Edm.String
	TradeName *string `json:"TradeName,omitempty"`

	// Type: Edm.String
	Type *string `json:"Type,omitempty"`

	// UniqueTaxpayerReference: Edm.String
	UniqueTaxpayerReference *string `json:"UniqueTaxpayerReference,omitempty"`

	// VATLiability: Edm.String
	VATLiability *string `json:"VATLiability,omitempty"`

	// VATNumber: Edm.String
	VATNumber *string `json:"VATNumber,omitempty"`

	// Website: Edm.String
	Website *string `json:"Website,omitempty"`
}

func (e *CRMAccounts) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *CRMAccountsEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "CRM/Accounts", method)
}

// List the CRMAccounts entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *CRMAccountsEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*CRMAccounts, error) {
	var entities []*CRMAccounts
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/CRM/Accounts", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the CRMAccounts entitiy in the provided division.
func (s *CRMAccountsEndpoint) Get(ctx context.Context, division int, id *int64) (*CRMAccounts, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/CRM/Accounts", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &CRMAccounts{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
