// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// SalesInvoiceSalesInvoicesEndpoint is responsible for communicating with
// the SalesInvoiceSalesInvoices endpoint of the Sync service.
type SalesInvoiceSalesInvoicesEndpoint service

// SalesInvoiceSalesInvoices:
// Service: Sync
// Entity: SalesInvoiceSalesInvoices
// URL: /api/v1/{division}/sync/SalesInvoice/SalesInvoices
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncSalesInvoiceSalesInvoices
type SalesInvoiceSalesInvoices struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// AmountDC: Edm.Double
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountDiscount: Edm.Double
	AmountDiscount *float64 `json:"AmountDiscount,omitempty"`

	// AmountDiscountExclVat: Edm.Double
	AmountDiscountExclVat *float64 `json:"AmountDiscountExclVat,omitempty"`

	// AmountFC: Edm.Double
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// AmountFCExclVat: Edm.Double
	AmountFCExclVat *float64 `json:"AmountFCExclVat,omitempty"`

	// CostCenter: Edm.String
	CostCenter *string `json:"CostCenter,omitempty"`

	// CostCenterDescription: Edm.String
	CostCenterDescription *string `json:"CostCenterDescription,omitempty"`

	// CostUnit: Edm.String
	CostUnit *string `json:"CostUnit,omitempty"`

	// CostUnitDescription: Edm.String
	CostUnitDescription *string `json:"CostUnitDescription,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency: Edm.String
	Currency *string `json:"Currency,omitempty"`

	// CustomerItemCode: Edm.String
	CustomerItemCode *string `json:"CustomerItemCode,omitempty"`

	// CustomField: Edm.String
	CustomField *string `json:"CustomField,omitempty"`

	// DeliverTo: Edm.Guid
	DeliverTo *types.GUID `json:"DeliverTo,omitempty"`

	// DeliverToAddress: Edm.Guid
	DeliverToAddress *types.GUID `json:"DeliverToAddress,omitempty"`

	// DeliverToContactPerson: Edm.Guid
	DeliverToContactPerson *types.GUID `json:"DeliverToContactPerson,omitempty"`

	// DeliverToContactPersonFullName: Edm.String
	DeliverToContactPersonFullName *string `json:"DeliverToContactPersonFullName,omitempty"`

	// DeliverToName: Edm.String
	DeliverToName *string `json:"DeliverToName,omitempty"`

	// DeliveryDate: Edm.DateTime
	DeliveryDate *types.Date `json:"DeliveryDate,omitempty"`

	// Description: Edm.String
	Description *string `json:"Description,omitempty"`

	// Discount: Edm.Double
	Discount *float64 `json:"Discount,omitempty"`

	// DiscountType: Edm.Int16
	DiscountType *int `json:"DiscountType,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// Document: Edm.Guid
	Document *types.GUID `json:"Document,omitempty"`

	// DocumentNumber: Edm.Int32
	DocumentNumber *int `json:"DocumentNumber,omitempty"`

	// DocumentSubject: Edm.String
	DocumentSubject *string `json:"DocumentSubject,omitempty"`

	// DueDate: Edm.DateTime
	DueDate *types.Date `json:"DueDate,omitempty"`

	// Employee: Edm.Guid
	Employee *types.GUID `json:"Employee,omitempty"`

	// EmployeeFullName: Edm.String
	EmployeeFullName *string `json:"EmployeeFullName,omitempty"`

	// EndTime: Edm.DateTime
	EndTime *types.Date `json:"EndTime,omitempty"`

	// ExtraDutyAmountFC: Edm.Double
	ExtraDutyAmountFC *float64 `json:"ExtraDutyAmountFC,omitempty"`

	// ExtraDutyPercentage: Edm.Double
	ExtraDutyPercentage *float64 `json:"ExtraDutyPercentage,omitempty"`

	// GAccountAmountFC: Edm.Double
	GAccountAmountFC *float64 `json:"GAccountAmountFC,omitempty"`

	// GLAccount: Edm.Guid
	GLAccount *types.GUID `json:"GLAccount,omitempty"`

	// GLAccountDescription: Edm.String
	GLAccountDescription *string `json:"GLAccountDescription,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// IncotermAddress: Edm.String
	IncotermAddress *string `json:"IncotermAddress,omitempty"`

	// IncotermCode: Edm.String
	IncotermCode *string `json:"IncotermCode,omitempty"`

	// IncotermVersion: Edm.Int16
	IncotermVersion *int `json:"IncotermVersion,omitempty"`

	// InvoiceDate: Edm.DateTime
	InvoiceDate *types.Date `json:"InvoiceDate,omitempty"`

	// InvoiceID: Edm.Guid
	InvoiceID *types.GUID `json:"InvoiceID,omitempty"`

	// InvoiceNumber: Edm.Int32
	InvoiceNumber *int `json:"InvoiceNumber,omitempty"`

	// InvoiceTo: Edm.Guid
	InvoiceTo *types.GUID `json:"InvoiceTo,omitempty"`

	// InvoiceToContactPerson: Edm.Guid
	InvoiceToContactPerson *types.GUID `json:"InvoiceToContactPerson,omitempty"`

	// InvoiceToContactPersonFullName: Edm.String
	InvoiceToContactPersonFullName *string `json:"InvoiceToContactPersonFullName,omitempty"`

	// InvoiceToName: Edm.String
	InvoiceToName *string `json:"InvoiceToName,omitempty"`

	// IsExtraDuty: Edm.Boolean
	IsExtraDuty *bool `json:"IsExtraDuty,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// Journal: Edm.String
	Journal *string `json:"Journal,omitempty"`

	// JournalDescription: Edm.String
	JournalDescription *string `json:"JournalDescription,omitempty"`

	// LineNumber: Edm.Int32
	LineNumber *int `json:"LineNumber,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// NetPrice: Edm.Double
	NetPrice *float64 `json:"NetPrice,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// OrderDate: Edm.DateTime
	OrderDate *types.Date `json:"OrderDate,omitempty"`

	// OrderedBy: Edm.Guid
	OrderedBy *types.GUID `json:"OrderedBy,omitempty"`

	// OrderedByContactPerson: Edm.Guid
	OrderedByContactPerson *types.GUID `json:"OrderedByContactPerson,omitempty"`

	// OrderedByContactPersonFullName: Edm.String
	OrderedByContactPersonFullName *string `json:"OrderedByContactPersonFullName,omitempty"`

	// OrderedByName: Edm.String
	OrderedByName *string `json:"OrderedByName,omitempty"`

	// OrderNumber: Edm.Int32
	OrderNumber *int `json:"OrderNumber,omitempty"`

	// PaymentCondition: Edm.String
	PaymentCondition *string `json:"PaymentCondition,omitempty"`

	// PaymentConditionDescription: Edm.String
	PaymentConditionDescription *string `json:"PaymentConditionDescription,omitempty"`

	// PaymentReference: Edm.String
	PaymentReference *string `json:"PaymentReference,omitempty"`

	// Pricelist: Edm.Guid
	Pricelist *types.GUID `json:"Pricelist,omitempty"`

	// PricelistDescription: Edm.String
	PricelistDescription *string `json:"PricelistDescription,omitempty"`

	// Project: Edm.Guid
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectDescription: Edm.String
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// ProjectWBS: Edm.Guid
	ProjectWBS *types.GUID `json:"ProjectWBS,omitempty"`

	// ProjectWBSDescription: Edm.String
	ProjectWBSDescription *string `json:"ProjectWBSDescription,omitempty"`

	// Quantity: Edm.Double
	Quantity *float64 `json:"Quantity,omitempty"`

	// Remarks: Edm.String
	Remarks *string `json:"Remarks,omitempty"`

	// SalesChannel: Edm.Guid
	SalesChannel *types.GUID `json:"SalesChannel,omitempty"`

	// SalesChannelCode: Edm.String
	SalesChannelCode *string `json:"SalesChannelCode,omitempty"`

	// SalesChannelDescription: Edm.String
	SalesChannelDescription *string `json:"SalesChannelDescription,omitempty"`

	// SalesOrder: Edm.Guid
	SalesOrder *types.GUID `json:"SalesOrder,omitempty"`

	// SalesOrderLine: Edm.Guid
	SalesOrderLine *types.GUID `json:"SalesOrderLine,omitempty"`

	// SalesOrderLineNumber: Edm.Int32
	SalesOrderLineNumber *int `json:"SalesOrderLineNumber,omitempty"`

	// SalesOrderNumber: Edm.Int32
	SalesOrderNumber *int `json:"SalesOrderNumber,omitempty"`

	// Salesperson: Edm.Guid
	Salesperson *types.GUID `json:"Salesperson,omitempty"`

	// SalespersonFullName: Edm.String
	SalespersonFullName *string `json:"SalespersonFullName,omitempty"`

	// StarterSalesInvoiceStatus: Edm.Int16
	StarterSalesInvoiceStatus *int `json:"StarterSalesInvoiceStatus,omitempty"`

	// StarterSalesInvoiceStatusDescription: Edm.String
	StarterSalesInvoiceStatusDescription *string `json:"StarterSalesInvoiceStatusDescription,omitempty"`

	// StartTime: Edm.DateTime
	StartTime *types.Date `json:"StartTime,omitempty"`

	// Status: Edm.Int16
	Status *int `json:"Status,omitempty"`

	// StatusDescription: Edm.String
	StatusDescription *string `json:"StatusDescription,omitempty"`

	// Subscription: Edm.Guid
	Subscription *types.GUID `json:"Subscription,omitempty"`

	// SubscriptionDescription: Edm.String
	SubscriptionDescription *string `json:"SubscriptionDescription,omitempty"`

	// TaxSchedule: Edm.Guid
	TaxSchedule *types.GUID `json:"TaxSchedule,omitempty"`

	// TaxScheduleCode: Edm.String
	TaxScheduleCode *string `json:"TaxScheduleCode,omitempty"`

	// TaxScheduleDescription: Edm.String
	TaxScheduleDescription *string `json:"TaxScheduleDescription,omitempty"`

	// Type: Edm.Int32
	Type *int `json:"Type,omitempty"`

	// TypeDescription: Edm.String
	TypeDescription *string `json:"TypeDescription,omitempty"`

	// UnitCode: Edm.String
	UnitCode *string `json:"UnitCode,omitempty"`

	// UnitDescription: Edm.String
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// UnitPrice: Edm.Double
	UnitPrice *float64 `json:"UnitPrice,omitempty"`

	// VATAmountDC: Edm.Double
	VATAmountDC *float64 `json:"VATAmountDC,omitempty"`

	// VATAmountFC: Edm.Double
	VATAmountFC *float64 `json:"VATAmountFC,omitempty"`

	// VATCode: Edm.String
	VATCode *string `json:"VATCode,omitempty"`

	// VATCodeDescription: Edm.String
	VATCodeDescription *string `json:"VATCodeDescription,omitempty"`

	// VATPercentage: Edm.Double
	VATPercentage *float64 `json:"VATPercentage,omitempty"`

	// Warehouse: Edm.Guid
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// WithholdingTaxAmountFC: Edm.Double
	WithholdingTaxAmountFC *float64 `json:"WithholdingTaxAmountFC,omitempty"`

	// WithholdingTaxBaseAmount: Edm.Double
	WithholdingTaxBaseAmount *float64 `json:"WithholdingTaxBaseAmount,omitempty"`

	// WithholdingTaxPercentage: Edm.Double
	WithholdingTaxPercentage *float64 `json:"WithholdingTaxPercentage,omitempty"`

	// YourRef: Edm.String
	YourRef *string `json:"YourRef,omitempty"`
}

func (e *SalesInvoiceSalesInvoices) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *SalesInvoiceSalesInvoicesEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "SalesInvoice/SalesInvoices", method)
}

// List the SalesInvoiceSalesInvoices entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesInvoiceSalesInvoicesEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*SalesInvoiceSalesInvoices, error) {
	var entities []*SalesInvoiceSalesInvoices
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesInvoice/SalesInvoices", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the SalesInvoiceSalesInvoices entitiy in the provided division.
func (s *SalesInvoiceSalesInvoicesEndpoint) Get(ctx context.Context, division int, id *int64) (*SalesInvoiceSalesInvoices, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesInvoice/SalesInvoices", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &SalesInvoiceSalesInvoices{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
