// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// SalesOrderSalesOrderLinesEndpoint is responsible for communicating with
// the SalesOrderSalesOrderLines endpoint of the Sync service.
type SalesOrderSalesOrderLinesEndpoint service

// SalesOrderSalesOrderLines:
// Service: Sync
// Entity: SalesOrderSalesOrderLines
// URL: /api/v1/{division}/sync/SalesOrder/SalesOrderLines
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncSalesOrderSalesOrderLines
type SalesOrderSalesOrderLines struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// AmountDC: Edm.Double
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountFC: Edm.Double
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// CostCenter: Edm.String
	CostCenter *string `json:"CostCenter,omitempty"`

	// CostCenterDescription: Edm.String
	CostCenterDescription *string `json:"CostCenterDescription,omitempty"`

	// CostPriceFC: Edm.Double
	CostPriceFC *float64 `json:"CostPriceFC,omitempty"`

	// CostUnit: Edm.String
	CostUnit *string `json:"CostUnit,omitempty"`

	// CostUnitDescription: Edm.String
	CostUnitDescription *string `json:"CostUnitDescription,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// CustomerItemCode: Edm.String
	CustomerItemCode *string `json:"CustomerItemCode,omitempty"`

	// DeliveryDate: Edm.DateTime
	DeliveryDate *types.Date `json:"DeliveryDate,omitempty"`

	// DeliveryStatus: Edm.Int16
	DeliveryStatus *int `json:"DeliveryStatus,omitempty"`

	// DeliveryStatusDescription: Edm.String
	DeliveryStatusDescription *string `json:"DeliveryStatusDescription,omitempty"`

	// Description: Edm.String
	Description *string `json:"Description,omitempty"`

	// Discount: Edm.Double
	Discount *float64 `json:"Discount,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// InvoiceStatus: Edm.Int16
	InvoiceStatus *int `json:"InvoiceStatus,omitempty"`

	// InvoiceStatusDescription: Edm.String
	InvoiceStatusDescription *string `json:"InvoiceStatusDescription,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// ItemVersion: Edm.Guid
	ItemVersion *types.GUID `json:"ItemVersion,omitempty"`

	// ItemVersionDescription: Edm.String
	ItemVersionDescription *string `json:"ItemVersionDescription,omitempty"`

	// LineNumber: Edm.Int32
	LineNumber *int `json:"LineNumber,omitempty"`

	// Margin: Edm.Double
	Margin *float64 `json:"Margin,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// NetPrice: Edm.Double
	NetPrice *float64 `json:"NetPrice,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// OrderID: Edm.Guid
	OrderID *types.GUID `json:"OrderID,omitempty"`

	// OrderNumber: Edm.Int32
	OrderNumber *int `json:"OrderNumber,omitempty"`

	// Pricelist: Edm.Guid
	Pricelist *types.GUID `json:"Pricelist,omitempty"`

	// PricelistDescription: Edm.String
	PricelistDescription *string `json:"PricelistDescription,omitempty"`

	// Project: Edm.Guid
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectCode: Edm.String
	ProjectCode *string `json:"ProjectCode,omitempty"`

	// ProjectDescription: Edm.String
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// PurchaseOrder: Edm.Guid
	PurchaseOrder *types.GUID `json:"PurchaseOrder,omitempty"`

	// PurchaseOrderLine: Edm.Guid
	PurchaseOrderLine *types.GUID `json:"PurchaseOrderLine,omitempty"`

	// PurchaseOrderLineNumber: Edm.Int32
	PurchaseOrderLineNumber *int `json:"PurchaseOrderLineNumber,omitempty"`

	// PurchaseOrderNumber: Edm.Int32
	PurchaseOrderNumber *int `json:"PurchaseOrderNumber,omitempty"`

	// Quantity: Edm.Double
	Quantity *float64 `json:"Quantity,omitempty"`

	// QuantityDelivered: Edm.Double
	QuantityDelivered *float64 `json:"QuantityDelivered,omitempty"`

	// QuantityInvoiced: Edm.Double
	QuantityInvoiced *float64 `json:"QuantityInvoiced,omitempty"`

	// ShopOrder: Edm.Guid
	ShopOrder *types.GUID `json:"ShopOrder,omitempty"`

	// ShopOrderNumber: Edm.Int32
	ShopOrderNumber *int `json:"ShopOrderNumber,omitempty"`

	// Status: Edm.Int16
	Status *int `json:"Status,omitempty"`

	// StatusDescription: Edm.String
	StatusDescription *string `json:"StatusDescription,omitempty"`

	// UnitCode: Edm.String
	UnitCode *string `json:"UnitCode,omitempty"`

	// UnitDescription: Edm.String
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// UnitPrice: Edm.Double
	UnitPrice *float64 `json:"UnitPrice,omitempty"`

	// UseDropShipment: Edm.Byte
	UseDropShipment *byte `json:"UseDropShipment,omitempty"`

	// VATAmount: Edm.Double
	VATAmount *float64 `json:"VATAmount,omitempty"`

	// VATCode: Edm.String
	VATCode *string `json:"VATCode,omitempty"`

	// VATCodeDescription: Edm.String
	VATCodeDescription *string `json:"VATCodeDescription,omitempty"`

	// VATPercentage: Edm.Double
	VATPercentage *float64 `json:"VATPercentage,omitempty"`
}

func (e *SalesOrderSalesOrderLines) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *SalesOrderSalesOrderLinesEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "SalesOrder/SalesOrderLines", method)
}

// List the SalesOrderSalesOrderLines entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesOrderSalesOrderLinesEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*SalesOrderSalesOrderLines, error) {
	var entities []*SalesOrderSalesOrderLines
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/SalesOrderLines", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the SalesOrderSalesOrderLines entitiy in the provided division.
func (s *SalesOrderSalesOrderLinesEndpoint) Get(ctx context.Context, division int, id *int64) (*SalesOrderSalesOrderLines, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/SalesOrder/SalesOrderLines", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &SalesOrderSalesOrderLines{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
