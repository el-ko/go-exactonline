// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// PurchaseOrderPurchaseOrdersEndpoint is responsible for communicating with
// the PurchaseOrderPurchaseOrders endpoint of the Sync service.
type PurchaseOrderPurchaseOrdersEndpoint service

// PurchaseOrderPurchaseOrders:
// Service: Sync
// Entity: PurchaseOrderPurchaseOrders
// URL: /api/v1/{division}/sync/PurchaseOrder/PurchaseOrders
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncPurchaseOrderPurchaseOrders
type PurchaseOrderPurchaseOrders struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// AmountDC: Edm.Double
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountFC: Edm.Double
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// ApprovalStatus: Edm.Int16
	ApprovalStatus *int `json:"ApprovalStatus,omitempty"`

	// ApprovalStatusDescription: Edm.String
	ApprovalStatusDescription *string `json:"ApprovalStatusDescription,omitempty"`

	// Approved: Edm.DateTime
	Approved *types.Date `json:"Approved,omitempty"`

	// Approver: Edm.Guid
	Approver *types.GUID `json:"Approver,omitempty"`

	// ApproverFullName: Edm.String
	ApproverFullName *string `json:"ApproverFullName,omitempty"`

	// CostCenter: Edm.Guid
	CostCenter *types.GUID `json:"CostCenter,omitempty"`

	// CostCenterCode: Edm.String
	CostCenterCode *string `json:"CostCenterCode,omitempty"`

	// CostCenterDescription: Edm.String
	CostCenterDescription *string `json:"CostCenterDescription,omitempty"`

	// CostUnit: Edm.Guid
	CostUnit *types.GUID `json:"CostUnit,omitempty"`

	// CostUnitCode: Edm.String
	CostUnitCode *string `json:"CostUnitCode,omitempty"`

	// CostUnitDescription: Edm.String
	CostUnitDescription *string `json:"CostUnitDescription,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency: Edm.String
	Currency *string `json:"Currency,omitempty"`

	// CustomField: Edm.String
	CustomField *string `json:"CustomField,omitempty"`

	// DeliveryAccount: Edm.Guid
	DeliveryAccount *types.GUID `json:"DeliveryAccount,omitempty"`

	// DeliveryAccountCode: Edm.String
	DeliveryAccountCode *string `json:"DeliveryAccountCode,omitempty"`

	// DeliveryAccountName: Edm.String
	DeliveryAccountName *string `json:"DeliveryAccountName,omitempty"`

	// DeliveryAddress: Edm.Guid
	DeliveryAddress *types.GUID `json:"DeliveryAddress,omitempty"`

	// DeliveryContact: Edm.Guid
	DeliveryContact *types.GUID `json:"DeliveryContact,omitempty"`

	// DeliveryContactPersonFullName: Edm.String
	DeliveryContactPersonFullName *string `json:"DeliveryContactPersonFullName,omitempty"`

	// Description: Edm.String
	Description *string `json:"Description,omitempty"`

	// Discount: Edm.Double
	Discount *float64 `json:"Discount,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// Document: Edm.Guid
	Document *types.GUID `json:"Document,omitempty"`

	// DocumentNumber: Edm.Int32
	DocumentNumber *int `json:"DocumentNumber,omitempty"`

	// DocumentSubject: Edm.String
	DocumentSubject *string `json:"DocumentSubject,omitempty"`

	// DropShipment: Edm.Boolean
	DropShipment *bool `json:"DropShipment,omitempty"`

	// ExchangeRate: Edm.Double
	ExchangeRate *float64 `json:"ExchangeRate,omitempty"`

	// Expense: Edm.Guid
	Expense *types.GUID `json:"Expense,omitempty"`

	// ExpenseDescription: Edm.String
	ExpenseDescription *string `json:"ExpenseDescription,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// IncotermAddress: Edm.String
	IncotermAddress *string `json:"IncotermAddress,omitempty"`

	// IncotermCode: Edm.String
	IncotermCode *string `json:"IncotermCode,omitempty"`

	// IncotermVersion: Edm.Int16
	IncotermVersion *int `json:"IncotermVersion,omitempty"`

	// InvoicedQuantity: Edm.Double
	InvoicedQuantity *float64 `json:"InvoicedQuantity,omitempty"`

	// InvoiceStatus: Edm.Int32
	InvoiceStatus *int `json:"InvoiceStatus,omitempty"`

	// IsBatchNumberItem: Edm.Byte
	IsBatchNumberItem *byte `json:"IsBatchNumberItem,omitempty"`

	// IsSerialNumberItem: Edm.Byte
	IsSerialNumberItem *byte `json:"IsSerialNumberItem,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemBarcode: Edm.String
	ItemBarcode *string `json:"ItemBarcode,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// ItemDivisable: Edm.Boolean
	ItemDivisable *bool `json:"ItemDivisable,omitempty"`

	// LineNumber: Edm.Int32
	LineNumber *int `json:"LineNumber,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// NetPrice: Edm.Double
	NetPrice *float64 `json:"NetPrice,omitempty"`

	// Notes: Edm.String
	Notes *string `json:"Notes,omitempty"`

	// OrderDate: Edm.DateTime
	OrderDate *types.Date `json:"OrderDate,omitempty"`

	// OrderNumber: Edm.Int32
	OrderNumber *int `json:"OrderNumber,omitempty"`

	// OrderStatus: Edm.Int32
	OrderStatus *int `json:"OrderStatus,omitempty"`

	// PaymentCondition: Edm.String
	PaymentCondition *string `json:"PaymentCondition,omitempty"`

	// PaymentConditionDescription: Edm.String
	PaymentConditionDescription *string `json:"PaymentConditionDescription,omitempty"`

	// Project: Edm.Guid
	Project *types.GUID `json:"Project,omitempty"`

	// ProjectCode: Edm.String
	ProjectCode *string `json:"ProjectCode,omitempty"`

	// ProjectDescription: Edm.String
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// PurchaseAgent: Edm.Guid
	PurchaseAgent *types.GUID `json:"PurchaseAgent,omitempty"`

	// PurchaseAgentFullName: Edm.String
	PurchaseAgentFullName *string `json:"PurchaseAgentFullName,omitempty"`

	// PurchaseOrderID: Edm.Guid
	PurchaseOrderID *types.GUID `json:"PurchaseOrderID,omitempty"`

	// Quantity: Edm.Double
	Quantity *float64 `json:"Quantity,omitempty"`

	// QuantityInPurchaseUnits: Edm.Double
	QuantityInPurchaseUnits *float64 `json:"QuantityInPurchaseUnits,omitempty"`

	// Rebill: Edm.Boolean
	Rebill *bool `json:"Rebill,omitempty"`

	// ReceiptDate: Edm.DateTime
	ReceiptDate *types.Date `json:"ReceiptDate,omitempty"`

	// ReceiptStatus: Edm.Int32
	ReceiptStatus *int `json:"ReceiptStatus,omitempty"`

	// ReceivedQuantity: Edm.Double
	ReceivedQuantity *float64 `json:"ReceivedQuantity,omitempty"`

	// Remarks: Edm.String
	Remarks *string `json:"Remarks,omitempty"`

	// SalesOrder: Edm.Guid
	SalesOrder *types.GUID `json:"SalesOrder,omitempty"`

	// SalesOrderLine: Edm.Guid
	SalesOrderLine *types.GUID `json:"SalesOrderLine,omitempty"`

	// SalesOrderLineNumber: Edm.Int32
	SalesOrderLineNumber *int `json:"SalesOrderLineNumber,omitempty"`

	// SalesOrderNumber: Edm.Int32
	SalesOrderNumber *int `json:"SalesOrderNumber,omitempty"`

	// SelectionCode: Edm.Guid
	SelectionCode *types.GUID `json:"SelectionCode,omitempty"`

	// SelectionCodeCode: Edm.String
	SelectionCodeCode *string `json:"SelectionCodeCode,omitempty"`

	// SelectionCodeDescription: Edm.String
	SelectionCodeDescription *string `json:"SelectionCodeDescription,omitempty"`

	// SendingMethod: Edm.Int32
	SendingMethod *int `json:"SendingMethod,omitempty"`

	// ShippingMethod: Edm.Guid
	ShippingMethod *types.GUID `json:"ShippingMethod,omitempty"`

	// ShippingMethodCode: Edm.String
	ShippingMethodCode *string `json:"ShippingMethodCode,omitempty"`

	// ShippingMethodDescription: Edm.String
	ShippingMethodDescription *string `json:"ShippingMethodDescription,omitempty"`

	// Source: Edm.Int16
	Source *int `json:"Source,omitempty"`

	// Supplier: Edm.Guid
	Supplier *types.GUID `json:"Supplier,omitempty"`

	// SupplierCode: Edm.String
	SupplierCode *string `json:"SupplierCode,omitempty"`

	// SupplierContact: Edm.Guid
	SupplierContact *types.GUID `json:"SupplierContact,omitempty"`

	// SupplierContactPersonFullName: Edm.String
	SupplierContactPersonFullName *string `json:"SupplierContactPersonFullName,omitempty"`

	// SupplierItemCode: Edm.String
	SupplierItemCode *string `json:"SupplierItemCode,omitempty"`

	// SupplierItemCopyRemarks: Edm.Byte
	SupplierItemCopyRemarks *byte `json:"SupplierItemCopyRemarks,omitempty"`

	// SupplierName: Edm.String
	SupplierName *string `json:"SupplierName,omitempty"`

	// Unit: Edm.String
	Unit *string `json:"Unit,omitempty"`

	// UnitDescription: Edm.String
	UnitDescription *string `json:"UnitDescription,omitempty"`

	// UnitPrice: Edm.Double
	UnitPrice *float64 `json:"UnitPrice,omitempty"`

	// VATAmount: Edm.Double
	VATAmount *float64 `json:"VATAmount,omitempty"`

	// VATCode: Edm.String
	VATCode *string `json:"VATCode,omitempty"`

	// VATDescription: Edm.String
	VATDescription *string `json:"VATDescription,omitempty"`

	// VATPercentage: Edm.Double
	VATPercentage *float64 `json:"VATPercentage,omitempty"`

	// Warehouse: Edm.Guid
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// WarehouseCode: Edm.String
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription: Edm.String
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`

	// YourRef: Edm.String
	YourRef *string `json:"YourRef,omitempty"`
}

func (e *PurchaseOrderPurchaseOrders) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *PurchaseOrderPurchaseOrdersEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "PurchaseOrder/PurchaseOrders", method)
}

// List the PurchaseOrderPurchaseOrders entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *PurchaseOrderPurchaseOrdersEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*PurchaseOrderPurchaseOrders, error) {
	var entities []*PurchaseOrderPurchaseOrders
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/PurchaseOrder/PurchaseOrders", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the PurchaseOrderPurchaseOrders entitiy in the provided division.
func (s *PurchaseOrderPurchaseOrdersEndpoint) Get(ctx context.Context, division int, id *int64) (*PurchaseOrderPurchaseOrders, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/PurchaseOrder/PurchaseOrders", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &PurchaseOrderPurchaseOrders{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
