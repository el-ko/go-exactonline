// Copyright 2024 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package sync

import (
	"context"

	"github.com/mcnijman/go-exactonline/api"
	"github.com/mcnijman/go-exactonline/types"
)

// InventoryStockSerialBatchNumbersEndpoint is responsible for communicating with
// the InventoryStockSerialBatchNumbers endpoint of the Sync service.
type InventoryStockSerialBatchNumbersEndpoint service

// InventoryStockSerialBatchNumbers:
// Service: Sync
// Entity: InventoryStockSerialBatchNumbers
// URL: /api/v1/{division}/sync/Inventory/StockSerialBatchNumbers
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SyncInventoryStockSerialBatchNumbers
type InventoryStockSerialBatchNumbers struct {
	MetaData *api.MetaData `json:"__metadata,omitempty"`
	// Timestamp: Edm.Int64
	Timestamp *int64 `json:"Timestamp,omitempty"`

	// Created: Edm.DateTime
	Created *types.Date `json:"Created,omitempty"`

	// Creator: Edm.Guid
	Creator *types.GUID `json:"Creator,omitempty"`

	// CreatorFullName: Edm.String
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Division: Edm.Int32
	Division *int `json:"Division,omitempty"`

	// DraftStockTransactionLocation: Edm.Guid
	DraftStockTransactionLocation *types.GUID `json:"DraftStockTransactionLocation,omitempty"`

	// DraftTransactionID: Edm.Guid
	DraftTransactionID *types.GUID `json:"DraftTransactionID,omitempty"`

	// ID: Edm.Guid
	ID *types.GUID `json:"ID,omitempty"`

	// IsDraft: Edm.Byte
	IsDraft *byte `json:"IsDraft,omitempty"`

	// Item: Edm.Guid
	Item *types.GUID `json:"Item,omitempty"`

	// ItemCode: Edm.String
	ItemCode *string `json:"ItemCode,omitempty"`

	// ItemDescription: Edm.String
	ItemDescription *string `json:"ItemDescription,omitempty"`

	// Modified: Edm.DateTime
	Modified *types.Date `json:"Modified,omitempty"`

	// Modifier: Edm.Guid
	Modifier *types.GUID `json:"Modifier,omitempty"`

	// ModifierFullName: Edm.String
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// ParentID: Edm.Guid
	ParentID *types.GUID `json:"ParentID,omitempty"`

	// PicklistLine: Edm.Guid
	PicklistLine *types.GUID `json:"PicklistLine,omitempty"`

	// PickOrderLine: Edm.Guid
	PickOrderLine *types.GUID `json:"PickOrderLine,omitempty"`

	// PurchaseTransaction: Edm.Guid
	PurchaseTransaction *types.GUID `json:"PurchaseTransaction,omitempty"`

	// Quantity: Edm.Double
	Quantity *float64 `json:"Quantity,omitempty"`

	// Remarks: Edm.String
	Remarks *string `json:"Remarks,omitempty"`

	// SalesOrderLine: Edm.Guid
	SalesOrderLine *types.GUID `json:"SalesOrderLine,omitempty"`

	// SalesReturnLine: Edm.Guid
	SalesReturnLine *types.GUID `json:"SalesReturnLine,omitempty"`

	// SalesTransaction: Edm.Guid
	SalesTransaction *types.GUID `json:"SalesTransaction,omitempty"`

	// SerialBatchNumber: Edm.Guid
	SerialBatchNumber *types.GUID `json:"SerialBatchNumber,omitempty"`

	// StockCountLine: Edm.Guid
	StockCountLine *types.GUID `json:"StockCountLine,omitempty"`

	// StockTransactionID: Edm.Guid
	StockTransactionID *types.GUID `json:"StockTransactionID,omitempty"`

	// StockTransactionLocation: Edm.Guid
	StockTransactionLocation *types.GUID `json:"StockTransactionLocation,omitempty"`

	// StockTransactionType: Edm.Int32
	StockTransactionType *int `json:"StockTransactionType,omitempty"`

	// StorageLocation: Edm.Guid
	StorageLocation *types.GUID `json:"StorageLocation,omitempty"`

	// StorageLocationCode: Edm.String
	StorageLocationCode *string `json:"StorageLocationCode,omitempty"`

	// StorageLocationDescription: Edm.String
	StorageLocationDescription *string `json:"StorageLocationDescription,omitempty"`

	// Warehouse: Edm.Guid
	Warehouse *types.GUID `json:"Warehouse,omitempty"`

	// WarehouseCode: Edm.String
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription: Edm.String
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`

	// WarehouseTransferLine: Edm.Guid
	WarehouseTransferLine *types.GUID `json:"WarehouseTransferLine,omitempty"`
}

func (e *InventoryStockSerialBatchNumbers) GetPrimary() *int64 {
	return e.Timestamp
}

func (s *InventoryStockSerialBatchNumbersEndpoint) UserHasRights(ctx context.Context, division int, method string) (bool, error) {
	return s.client.UserHasRights(ctx, division, "Inventory/StockSerialBatchNumbers", method)
}

// List the InventoryStockSerialBatchNumbers entities in the provided division.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *InventoryStockSerialBatchNumbersEndpoint) List(ctx context.Context, division int, all bool, o *api.ListOptions) ([]*InventoryStockSerialBatchNumbers, error) {
	var entities []*InventoryStockSerialBatchNumbers
	u, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/Inventory/StockSerialBatchNumbers", division) // #nosec
	api.AddListOptionsToURL(u, o)

	if all {
		err := s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, err := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, &entities)
	return entities, err
}

// Get the InventoryStockSerialBatchNumbers entitiy in the provided division.
func (s *InventoryStockSerialBatchNumbersEndpoint) Get(ctx context.Context, division int, id *int64) (*InventoryStockSerialBatchNumbers, error) {
	b, _ := s.client.ResolvePathWithDivision("/api/v1/{division}/sync/Inventory/StockSerialBatchNumbers", division) // #nosec
	u, err := api.AddOdataKeyToURL(b, id)
	if err != nil {
		return nil, err
	}

	e := &InventoryStockSerialBatchNumbers{}
	_, _, requestError := s.client.NewRequestAndDo(ctx, "GET", u.String(), nil, e)
	return e, requestError
}
