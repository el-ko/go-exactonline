// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// PurchaseEntryPurchaseEntryLinesService is responsible for communicating with
// the PurchaseEntryLines endpoint of the PurchaseEntry service.
type PurchaseEntryPurchaseEntryLinesService service

// PurchaseEntryPurchaseEntryLines:
// Service: PurchaseEntry
// Entity: PurchaseEntryLines
// URL: /api/v1/{division}/purchaseentry/PurchaseEntryLines
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=PurchaseEntryPurchaseEntryLines
type PurchaseEntryPurchaseEntryLines struct {
	// ID:
	ID *GUID `json:"ID,omitempty"`

	// AmountDC:
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountFC:
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// Asset:
	Asset *GUID `json:"Asset,omitempty"`

	// AssetDescription:
	AssetDescription *string `json:"AssetDescription,omitempty"`

	// CostCenter:
	CostCenter *string `json:"CostCenter,omitempty"`

	// CostCenterDescription:
	CostCenterDescription *string `json:"CostCenterDescription,omitempty"`

	// CostUnit:
	CostUnit *string `json:"CostUnit,omitempty"`

	// CostUnitDescription:
	CostUnitDescription *string `json:"CostUnitDescription,omitempty"`

	// Description:
	Description *string `json:"Description,omitempty"`

	// Division:
	Division *int `json:"Division,omitempty"`

	// EntryID:
	EntryID *GUID `json:"EntryID,omitempty"`

	// From:
	From *Date `json:"From,omitempty"`

	// GLAccount:
	GLAccount *GUID `json:"GLAccount,omitempty"`

	// GLAccountCode:
	GLAccountCode *string `json:"GLAccountCode,omitempty"`

	// GLAccountDescription:
	GLAccountDescription *string `json:"GLAccountDescription,omitempty"`

	// IntraStatArea:
	IntraStatArea *string `json:"IntraStatArea,omitempty"`

	// IntraStatCountry:
	IntraStatCountry *string `json:"IntraStatCountry,omitempty"`

	// IntraStatDeliveryTerm:
	IntraStatDeliveryTerm *string `json:"IntraStatDeliveryTerm,omitempty"`

	// IntraStatTransactionA:
	IntraStatTransactionA *string `json:"IntraStatTransactionA,omitempty"`

	// IntraStatTransportMethod:
	IntraStatTransportMethod *string `json:"IntraStatTransportMethod,omitempty"`

	// LineNumber:
	LineNumber *int `json:"LineNumber,omitempty"`

	// Notes:
	Notes *string `json:"Notes,omitempty"`

	// PrivateUsePercentage:
	PrivateUsePercentage *float64 `json:"PrivateUsePercentage,omitempty"`

	// Project:
	Project *GUID `json:"Project,omitempty"`

	// ProjectDescription:
	ProjectDescription *string `json:"ProjectDescription,omitempty"`

	// Quantity:
	Quantity *float64 `json:"Quantity,omitempty"`

	// SerialNumber:
	SerialNumber *string `json:"SerialNumber,omitempty"`

	// StatisticalNetWeight:
	StatisticalNetWeight *float64 `json:"StatisticalNetWeight,omitempty"`

	// StatisticalNumber:
	StatisticalNumber *string `json:"StatisticalNumber,omitempty"`

	// StatisticalQuantity:
	StatisticalQuantity *float64 `json:"StatisticalQuantity,omitempty"`

	// StatisticalValue:
	StatisticalValue *float64 `json:"StatisticalValue,omitempty"`

	// Subscription:
	Subscription *GUID `json:"Subscription,omitempty"`

	// SubscriptionDescription:
	SubscriptionDescription *string `json:"SubscriptionDescription,omitempty"`

	// To:
	To *Date `json:"To,omitempty"`

	// TrackingNumber:
	TrackingNumber *GUID `json:"TrackingNumber,omitempty"`

	// TrackingNumberDescription:
	TrackingNumberDescription *string `json:"TrackingNumberDescription,omitempty"`

	// Type:
	Type *int `json:"Type,omitempty"`

	// VATAmountDC:
	VATAmountDC *float64 `json:"VATAmountDC,omitempty"`

	// VATAmountFC:
	VATAmountFC *float64 `json:"VATAmountFC,omitempty"`

	// VATBaseAmountDC:
	VATBaseAmountDC *float64 `json:"VATBaseAmountDC,omitempty"`

	// VATBaseAmountFC:
	VATBaseAmountFC *float64 `json:"VATBaseAmountFC,omitempty"`

	// VATCode:
	VATCode *string `json:"VATCode,omitempty"`

	// VATCodeDescription:
	VATCodeDescription *string `json:"VATCodeDescription,omitempty"`

	// VATNonDeductiblePercentage:
	VATNonDeductiblePercentage *float64 `json:"VATNonDeductiblePercentage,omitempty"`

	// VATPercentage:
	VATPercentage *float64 `json:"VATPercentage,omitempty"`

	// WithholdingAmountDC:
	WithholdingAmountDC *float64 `json:"WithholdingAmountDC,omitempty"`

	// WithholdingTax:
	WithholdingTax *string `json:"WithholdingTax,omitempty"`
}

func (s *PurchaseEntryPurchaseEntryLines) GetIdentifier() GUID {
	return *s.ID
}

// List the PurchaseEntryLines entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *PurchaseEntryPurchaseEntryLinesService) List(ctx context.Context, division int, all bool) ([]*PurchaseEntryPurchaseEntryLines, error) {
	var entities []*PurchaseEntryPurchaseEntryLines
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/purchaseentry/PurchaseEntryLines?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}

/* // Get the PurchaseEntryLines enitity, by ID.
func (s *PurchaseEntryPurchaseEntryLinesService) Get(ctx context.Context, division int, id GUID) (*PurchaseEntryPurchaseEntryLines, error) {
	var entities []*PurchaseEntryPurchaseEntryLines
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/purchaseentry/PurchaseEntryLines?$select=*", division)
	if err != nil {
		return nil, err
	}

	if _, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities); err != nil {
		return nil, err
	}

	if len(entities) != 1 {
		return nil, fmt.Errorf("Returned %d PurchaseEntryLines entities, expected 1", len(entities))
	}

	return entities[0], nil
} */
