// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// AccountancySolutionLinksService is responsible for communicating with
// the SolutionLinks endpoint of the Accountancy service.
type AccountancySolutionLinksService service

// AccountancySolutionLinks:
// Service: Accountancy
// Entity: SolutionLinks
// URL: /api/v1/{division}/accountancy/SolutionLinks
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=AccountancySolutionLinks
type AccountancySolutionLinks struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Account: ID of account to which solution is linked
	Account *GUID `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// Division: Accountant main division
	Division *int `json:",omitempty"`

	// ExternalSolutionCode: If type is external predefined, represents ID of PracticeManagementExternalSolutions (mandatory for External solution)
	ExternalSolutionCode *int `json:",omitempty"`

	// ExternalSolutionName: Name of the external solution
	ExternalSolutionName *string `json:",omitempty"`

	// ExternalSolutionUrl: Customer URl in external solution, like solution.com/id123 (mandatory for External and ExternalOther solution)
	ExternalSolutionUrl *string `json:",omitempty"`

	// InternalSolutionDivision: Division code of linked internal solution (mandatory for Internal solution)
	InternalSolutionDivision *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// Name: Name of the solution link
	Name *string `json:",omitempty"`

	// OtherExternalSolutionName: Name of the custom external solution (mandatory for ExternalOther solution)
	OtherExternalSolutionName *string `json:",omitempty"`

	// SolutionType: Type of solution: 0 - Internal(EOL), 1 - External(Wellknown solution), 2 - ExternalOther
	SolutionType *int `json:",omitempty"`

	// Status: Link status: 0 - Active, 1 - Inactive, 2 -Archived
	Status *int `json:",omitempty"`
}

func (s *AccountancySolutionLinks) GetIdentifier() GUID {
	return *s.ID
}

// List the SolutionLinks entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *AccountancySolutionLinksService) List(ctx context.Context, division int, all bool) ([]*AccountancySolutionLinks, error) {
	var entities []*AccountancySolutionLinks
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/accountancy/SolutionLinks?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
