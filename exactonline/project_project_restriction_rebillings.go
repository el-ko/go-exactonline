// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// ProjectProjectRestrictionRebillingsService is responsible for communicating with
// the ProjectRestrictionRebillings endpoint of the Project service.
type ProjectProjectRestrictionRebillingsService service

// ProjectProjectRestrictionRebillings:
// Service: Project
// Entity: ProjectRestrictionRebillings
// URL: /api/v1/{division}/project/ProjectRestrictionRebillings
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ProjectProjectRestrictionRebillings
type ProjectProjectRestrictionRebillings struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// CostTypeRebill: Cost type reference
	CostTypeRebill *GUID `json:",omitempty"`

	// CostTypeRebillCode: Cost type code
	CostTypeRebillCode *string `json:",omitempty"`

	// CostTypeRebillDescription: Cost type description
	CostTypeRebillDescription *string `json:",omitempty"`

	// Created: Date created
	Created *Date `json:",omitempty"`

	// Creator: Creator user ID
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Creator name
	CreatorFullName *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// Modified: Date modified
	Modified *Date `json:",omitempty"`

	// Modifier: Modifier user ID
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Modifier name
	ModifierFullName *string `json:",omitempty"`

	// Project: Project linked to the restriction
	Project *GUID `json:",omitempty"`

	// ProjectCode: Project code
	ProjectCode *string `json:",omitempty"`

	// ProjectDescription: Project description
	ProjectDescription *string `json:",omitempty"`
}

func (s *ProjectProjectRestrictionRebillings) GetIdentifier() GUID {
	return *s.ID
}

// List the ProjectRestrictionRebillings entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ProjectProjectRestrictionRebillingsService) List(ctx context.Context, division int, all bool) ([]*ProjectProjectRestrictionRebillings, error) {
	var entities []*ProjectProjectRestrictionRebillings
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/project/ProjectRestrictionRebillings?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
