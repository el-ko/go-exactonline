// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// ProjectTimeAndBillingEntryRecentProjectsService is responsible for communicating with
// the TimeAndBillingEntryRecentProjects endpoint of the Project service.
type ProjectTimeAndBillingEntryRecentProjectsService service

// ProjectTimeAndBillingEntryRecentProjects:
// Service: Project
// Entity: TimeAndBillingEntryRecentProjects
// URL: /api/v1/{division}/read/project/TimeAndBillingEntryRecentProjects
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ReadProjectTimeAndBillingEntryRecentProjects
type ProjectTimeAndBillingEntryRecentProjects struct {
	// ProjectId: Primary key
	ProjectId *GUID `json:",omitempty"`

	// DateLastUsed: Date last used
	DateLastUsed *Date `json:",omitempty"`

	// ProjectCode: Code of project
	ProjectCode *string `json:",omitempty"`

	// ProjectDescription: Description of project
	ProjectDescription *string `json:",omitempty"`
}

func (s *ProjectTimeAndBillingEntryRecentProjects) GetIdentifier() GUID {
	return *s.ProjectId
}

// List the TimeAndBillingEntryRecentProjects entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ProjectTimeAndBillingEntryRecentProjectsService) List(ctx context.Context, division int, all bool) ([]*ProjectTimeAndBillingEntryRecentProjects, error) {
	var entities []*ProjectTimeAndBillingEntryRecentProjects
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/read/project/TimeAndBillingEntryRecentProjects?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
