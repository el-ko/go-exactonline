// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// FinancialAgingOverviewService is responsible for communicating with
// the AgingOverview endpoint of the Financial service.
type FinancialAgingOverviewService service

// FinancialAgingOverview:
// Service: Financial
// Entity: AgingOverview
// URL: /api/v1/{division}/read/financial/AgingOverview
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ReadFinancialAgingOverview
type FinancialAgingOverview struct {
	// AgeGroup: Primary key
	AgeGroup *int `json:",omitempty"`

	// AgeGroupDescription: Description of AgeGroup
	AgeGroupDescription *string `json:",omitempty"`

	// AmountPayable: Amount payable
	AmountPayable *float64 `json:",omitempty"`

	// AmountReceivable: Amount receivable
	AmountReceivable *float64 `json:",omitempty"`

	// CurrencyCode: Code of Currency
	CurrencyCode *string `json:",omitempty"`
}

func (s *FinancialAgingOverview) GetIdentifier() int {
	return *s.AgeGroup
}

// List the AgingOverview entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *FinancialAgingOverviewService) List(ctx context.Context, division int, all bool) ([]*FinancialAgingOverview, error) {
	var entities []*FinancialAgingOverview
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/read/financial/AgingOverview?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
