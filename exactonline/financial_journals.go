// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// FinancialJournalsService is responsible for communicating with
// the Journals endpoint of the Financial service.
type FinancialJournalsService service

// FinancialJournals:
// Service: Financial
// Entity: Journals
// URL: /api/v1/{division}/financial/Journals
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=FinancialJournals
type FinancialJournals struct {
	// ID: Primary Key
	ID *GUID `json:",omitempty"`

	// AllowVariableCurrency: Indicates if the journal allows variable currency
	AllowVariableCurrency *bool `json:",omitempty"`

	// AllowVariableExchangeRate: Indicates if the journal allows the exchange rate of the currency of the amounts in the journal entry to be changed
	AllowVariableExchangeRate *bool `json:",omitempty"`

	// AllowVAT: Indicates if the journal allows the use of VAT in the financial entry. Especially true for general journals
	AllowVAT *bool `json:",omitempty"`

	// AutoSave: Indicates if the journal automatically saves the entries when the amount is in balance with the entry lines
	AutoSave *bool `json:",omitempty"`

	// Bank: Reference to bank account
	Bank *GUID `json:",omitempty"`

	// BankAccountBICCode: BIC code of the bank where the bank account is held
	BankAccountBICCode *string `json:",omitempty"`

	// BankAccountCountry: Country of bank account
	BankAccountCountry *string `json:",omitempty"`

	// BankAccountDescription: Description of BankAccount
	BankAccountDescription *string `json:",omitempty"`

	// BankAccountIBAN: IBAN of the bank account
	BankAccountIBAN *string `json:",omitempty"`

	// BankAccountID: Reference to the Bank Account linked to the Journal
	BankAccountID *GUID `json:",omitempty"`

	// BankAccountIncludingMask: Bank account number. Is mandatory for Journals that have Type = Bank
	BankAccountIncludingMask *string `json:",omitempty"`

	// BankAccountUseSEPA: Obsolete. Whether or not use SEPA for the bank account
	BankAccountUseSEPA *bool `json:",omitempty"`

	// BankAccountUseSepaDirectDebit: Obsolete. Whether or not use SEPA direct debit for the bank account
	BankAccountUseSepaDirectDebit *bool `json:",omitempty"`

	// BankName: Name of bank account
	BankName *string `json:",omitempty"`

	// Code: Primary key
	Code *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Currency: Default Currency of the Journal. If AllowVariableCurrency is false this is the only currency that can be used
	Currency *string `json:",omitempty"`

	// CurrencyDescription: Description of Currency
	CurrencyDescription *string `json:",omitempty"`

	// Description: Name of the Journal
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// GLAccount: Suspense general ledger account
	GLAccount *GUID `json:",omitempty"`

	// GLAccountCode: Code of GLAccount
	GLAccountCode *string `json:",omitempty"`

	// GLAccountDescription: Description of GLAccount
	GLAccountDescription *string `json:",omitempty"`

	// GLAccountType: Type of GLAccount
	GLAccountType *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// PaymentInTransitAccount: General ledger account for payment in transit
	PaymentInTransitAccount *GUID `json:",omitempty"`

	// PaymentServiceAccountIdentifier: Identifier detail of the Payment service account. Ex. EmailID for Paypal type of Payment service account
	PaymentServiceAccountIdentifier *string `json:",omitempty"`

	// PaymentServiceProvider: Type of Payment service provider. The following values are supported: 1 (Adyen), 2 (Paypal), 3 (Stripe). Is mandatory for Journals of Type 16 (Payment service)
	PaymentServiceProvider *int `json:",omitempty"`

	// PaymentServiceProviderName: Name of the Payment service provider
	PaymentServiceProviderName *string `json:",omitempty"`

	// Type: Type of Journal. The following values are supported: 10 (Cash) 12 (Bank) 16 (Payment service) 20 (Sales) 21 (Return invoice) 22 (Purchase) 23 (Received return invoice) 90 (General journal)
	Type *int `json:",omitempty"`
}

func (s *FinancialJournals) GetIdentifier() GUID {
	return *s.ID
}

// List the Journals entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *FinancialJournalsService) List(ctx context.Context, division int, all bool) ([]*FinancialJournals, error) {
	var entities []*FinancialJournals
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/financial/Journals?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
