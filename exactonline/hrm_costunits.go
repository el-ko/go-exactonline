// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// HRMCostunitsService is responsible for communicating with
// the Costunits endpoint of the HRM service.
type HRMCostunitsService service

// HRMCostunits:
// Service: HRM
// Entity: Costunits
// URL: /api/v1/{division}/hrm/Costunits
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=HRMCostunits
type HRMCostunits struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Code: Code (user-defined)
	Code *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description (text)
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// EndDate: The end date by which the cost unit has to be inactive
	EndDate *Date `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`
}

func (s *HRMCostunits) GetIdentifier() GUID {
	return *s.ID
}

// List the Costunits entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *HRMCostunitsService) List(ctx context.Context, division int, all bool) ([]*HRMCostunits, error) {
	var entities []*HRMCostunits
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/hrm/Costunits?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
