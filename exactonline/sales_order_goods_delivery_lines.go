// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// SalesOrderGoodsDeliveryLinesService is responsible for communicating with
// the GoodsDeliveryLines endpoint of the SalesOrder service.
type SalesOrderGoodsDeliveryLinesService service

// SalesOrderGoodsDeliveryLines:
// Service: SalesOrder
// Entity: GoodsDeliveryLines
// URL: /api/v1/{division}/salesorder/GoodsDeliveryLines
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST PUT
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SalesOrderGoodsDeliveryLines
type SalesOrderGoodsDeliveryLines struct {
	// ID:
	ID *GUID `json:",omitempty"`

	// BatchNumbers:
	BatchNumbers *[]byte `json:",omitempty"`

	// Created:
	Created *Date `json:",omitempty"`

	// Creator:
	Creator *GUID `json:",omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:",omitempty"`

	// DeliveryDate:
	DeliveryDate *Date `json:",omitempty"`

	// Description:
	Description *string `json:",omitempty"`

	// Division:
	Division *int `json:",omitempty"`

	// EntryID:
	EntryID *GUID `json:",omitempty"`

	// Item:
	Item *GUID `json:",omitempty"`

	// ItemCode:
	ItemCode *string `json:",omitempty"`

	// ItemDescription:
	ItemDescription *string `json:",omitempty"`

	// LineNumber:
	LineNumber *int `json:",omitempty"`

	// Modified:
	Modified *Date `json:",omitempty"`

	// Modifier:
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:",omitempty"`

	// Notes:
	Notes *string `json:",omitempty"`

	// QuantityDelivered:
	QuantityDelivered *float64 `json:",omitempty"`

	// QuantityOrdered:
	QuantityOrdered *float64 `json:",omitempty"`

	// SalesOrderLineID:
	SalesOrderLineID *GUID `json:",omitempty"`

	// SalesOrderLineNumber:
	SalesOrderLineNumber *int `json:",omitempty"`

	// SalesOrderNumber:
	SalesOrderNumber *int `json:",omitempty"`

	// SerialNumbers:
	SerialNumbers *[]byte `json:",omitempty"`

	// StorageLocation:
	StorageLocation *GUID `json:",omitempty"`

	// StorageLocationCode:
	StorageLocationCode *string `json:",omitempty"`

	// StorageLocationDescription:
	StorageLocationDescription *string `json:",omitempty"`

	// TrackingNumber:
	TrackingNumber *string `json:",omitempty"`

	// Unitcode:
	Unitcode *string `json:",omitempty"`
}

func (s *SalesOrderGoodsDeliveryLines) GetIdentifier() GUID {
	return *s.ID
}

// List the GoodsDeliveryLines entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesOrderGoodsDeliveryLinesService) List(ctx context.Context, division int, all bool) ([]*SalesOrderGoodsDeliveryLines, error) {
	var entities []*SalesOrderGoodsDeliveryLines
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/salesorder/GoodsDeliveryLines?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
