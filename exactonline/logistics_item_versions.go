// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// LogisticsItemVersionsService is responsible for communicating with
// the ItemVersions endpoint of the Logistics service.
type LogisticsItemVersionsService service

// LogisticsItemVersions:
// Service: Logistics
// Entity: ItemVersions
// URL: /api/v1/{division}/logistics/ItemVersions
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=LogisticsItemVersions
type LogisticsItemVersions struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// BatchQuantity: Batch Quantity of Item Version
	BatchQuantity *float64 `json:",omitempty"`

	// CalculatedCostPrice: Calculated Cost Price of Item Version
	CalculatedCostPrice *float64 `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description of the item version
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// IsDefault: Indicates if this is the default item version that will be assigned when a item is selected
	IsDefault *byte `json:",omitempty"`

	// Item: Reference to Items table
	Item *GUID `json:",omitempty"`

	// ItemDescription: Description of Item
	ItemDescription *string `json:",omitempty"`

	// LeadTime: Lead time of Item version
	LeadTime *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Notes: Line notes
	Notes *string `json:",omitempty"`

	// Status: Statuses of Item version: 10-Engineering change pending, 20-Engineering change approved, 30-Active &amp; 40-Historic
	Status *int `json:",omitempty"`

	// StatusDescription: Description of Status
	StatusDescription *string `json:",omitempty"`

	// Type: Type of Item version: 10-Sales bill of material, 20-Manufacturing recipe
	Type *int `json:",omitempty"`

	// TypeDescription: Description of Type
	TypeDescription *string `json:",omitempty"`

	// VersionNumber: Version Number
	VersionNumber *int `json:",omitempty"`
}

func (s *LogisticsItemVersions) GetIdentifier() GUID {
	return *s.ID
}

// List the ItemVersions entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *LogisticsItemVersionsService) List(ctx context.Context, division int, all bool) ([]*LogisticsItemVersions, error) {
	var entities []*LogisticsItemVersions
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/logistics/ItemVersions?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
