// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// HRMLeaveRegistrationsService is responsible for communicating with
// the LeaveRegistrations endpoint of the HRM service.
type HRMLeaveRegistrationsService service

// HRMLeaveRegistrations:
// Service: HRM
// Entity: LeaveRegistrations
// URL: /api/v1/{division}/hrm/LeaveRegistrations
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=HRMLeaveRegistrations
type HRMLeaveRegistrations struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description of leave
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// Employee: Employee linked to the leave registration
	Employee *GUID `json:",omitempty"`

	// EmployeeFullName: Employee full name
	EmployeeFullName *string `json:",omitempty"`

	// EmployeeHID: Numeric ID of the employee
	EmployeeHID *int `json:",omitempty"`

	// EndDate: End date of leave
	EndDate *Date `json:",omitempty"`

	// EndTime: End time on the last day of leave stored as DateTime, and the date should be ignored
	EndTime *Date `json:",omitempty"`

	// Hours: Total number of leave hours
	Hours *float64 `json:",omitempty"`

	// HoursFirstDay: Hours of leave on the first day
	HoursFirstDay *float64 `json:",omitempty"`

	// HoursLastDay: Hours of leave on the last day
	HoursLastDay *float64 `json:",omitempty"`

	// LeaveType: Type of leave
	LeaveType *GUID `json:",omitempty"`

	// LeaveTypeCode: Code for type of leave
	LeaveTypeCode *string `json:",omitempty"`

	// LeaveTypeDescription: Description for type of leave
	LeaveTypeDescription *string `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Notes: Extra information for leave
	Notes *string `json:",omitempty"`

	// StartDate: Start date of leave
	StartDate *Date `json:",omitempty"`

	// StartTime: Start time on the first day of leave stored as DateTime, and the date should be ignored
	StartTime *Date `json:",omitempty"`

	// Status: Status of leave, 1 = Submitted, 2 = Approved, 3 = Rejected
	Status *int `json:",omitempty"`
}

func (s *HRMLeaveRegistrations) GetIdentifier() GUID {
	return *s.ID
}

// List the LeaveRegistrations entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *HRMLeaveRegistrationsService) List(ctx context.Context, division int, all bool) ([]*HRMLeaveRegistrations, error) {
	var entities []*HRMLeaveRegistrations
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/hrm/LeaveRegistrations?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
