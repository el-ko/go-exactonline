// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// FinancialProfitLossOverviewService is responsible for communicating with
// the ProfitLossOverview endpoint of the Financial service.
type FinancialProfitLossOverviewService service

// FinancialProfitLossOverview:
// Service: Financial
// Entity: ProfitLossOverview
// URL: /api/v1/{division}/read/financial/ProfitLossOverview
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ReadFinancialProfitLossOverview
type FinancialProfitLossOverview struct {
	// CurrentYear: Primary key, Current year
	CurrentYear *int `json:",omitempty"`

	// CostsCurrentPeriod: Costs in current period
	CostsCurrentPeriod *float64 `json:",omitempty"`

	// CostsCurrentYear: Costs in current year
	CostsCurrentYear *float64 `json:",omitempty"`

	// CostsPreviousYear: Costs in previous year
	CostsPreviousYear *float64 `json:",omitempty"`

	// CostsPreviousYearPeriod: Costs in period of previous year
	CostsPreviousYearPeriod *float64 `json:",omitempty"`

	// CurrencyCode: Currency code
	CurrencyCode *string `json:",omitempty"`

	// CurrentPeriod: Current period
	CurrentPeriod *int `json:",omitempty"`

	// PreviousYear: Previous year
	PreviousYear *int `json:",omitempty"`

	// PreviousYearPeriod: Period in previous year
	PreviousYearPeriod *int `json:",omitempty"`

	// ResultCurrentPeriod: Results of current period
	ResultCurrentPeriod *float64 `json:",omitempty"`

	// ResultCurrentYear:
	ResultCurrentYear *float64 `json:",omitempty"`

	// ResultPreviousYear:
	ResultPreviousYear *float64 `json:",omitempty"`

	// ResultPreviousYearPeriod: Results of period in previous year
	ResultPreviousYearPeriod *float64 `json:",omitempty"`

	// RevenueCurrentPeriod: Revenue in current period
	RevenueCurrentPeriod *float64 `json:",omitempty"`

	// RevenueCurrentYear: Revenue in current year
	RevenueCurrentYear *float64 `json:",omitempty"`

	// RevenuePreviousYear: Revenue in previous year
	RevenuePreviousYear *float64 `json:",omitempty"`

	// RevenuePreviousYearPeriod: Revenue in period of previous year
	RevenuePreviousYearPeriod *float64 `json:",omitempty"`
}

func (s *FinancialProfitLossOverview) GetIdentifier() int {
	return *s.CurrentYear
}

// List the ProfitLossOverview entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *FinancialProfitLossOverviewService) List(ctx context.Context, division int, all bool) ([]*FinancialProfitLossOverview, error) {
	var entities []*FinancialProfitLossOverview
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/read/financial/ProfitLossOverview?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
