// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// ManufacturingShopOrderMaterialPlansService is responsible for communicating with
// the ShopOrderMaterialPlans endpoint of the Manufacturing service.
type ManufacturingShopOrderMaterialPlansService service

// ManufacturingShopOrderMaterialPlans:
// Service: Manufacturing
// Entity: ShopOrderMaterialPlans
// URL: /api/v1/{division}/manufacturing/ShopOrderMaterialPlans
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ManufacturingShopOrderMaterialPlans
type ManufacturingShopOrderMaterialPlans struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Backflush: Indicates if this is a backflush step
	Backflush *byte `json:",omitempty"`

	// CalculatorType: Calculator type
	CalculatorType *int `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description of the material
	Description *string `json:",omitempty"`

	// DetailDrawing: Detail drawing reference
	DetailDrawing *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// Item: Reference to Items table
	Item *GUID `json:",omitempty"`

	// ItemCode: Item Code
	ItemCode *string `json:",omitempty"`

	// ItemDescription: Description of Item
	ItemDescription *string `json:",omitempty"`

	// ItemPictureUrl: URL of the material item&#39;s picture
	ItemPictureUrl *string `json:",omitempty"`

	// LineNumber: Line number
	LineNumber *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Notes: Line notes
	Notes *string `json:",omitempty"`

	// PlannedAmountFC: Planned amount in the currency of the transaction
	PlannedAmountFC *float64 `json:",omitempty"`

	// PlannedDate: Date that the material is required.
	PlannedDate *Date `json:",omitempty"`

	// PlannedPriceFC: Planned price of the material
	PlannedPriceFC *float64 `json:",omitempty"`

	// PlannedQuantity: Intended quantity
	PlannedQuantity *float64 `json:",omitempty"`

	// PlannedQuantityFactor: Intended quantity unit factor
	PlannedQuantityFactor *float64 `json:",omitempty"`

	// ShopOrder: Reference to ShopOrders table
	ShopOrder *GUID `json:",omitempty"`

	// Status: Line status
	Status *int `json:",omitempty"`

	// StatusDescription: Description of Status
	StatusDescription *string `json:",omitempty"`

	// Type: Type
	Type *int `json:",omitempty"`

	// Unit: Unit
	Unit *string `json:",omitempty"`

	// UnitDescription: Unit description
	UnitDescription *string `json:",omitempty"`
}

func (s *ManufacturingShopOrderMaterialPlans) GetIdentifier() GUID {
	return *s.ID
}

// List the ShopOrderMaterialPlans entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ManufacturingShopOrderMaterialPlansService) List(ctx context.Context, division int, all bool) ([]*ManufacturingShopOrderMaterialPlans, error) {
	var entities []*ManufacturingShopOrderMaterialPlans
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/manufacturing/ShopOrderMaterialPlans?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
