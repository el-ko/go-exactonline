// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// ProjectInvoiceTermsService is responsible for communicating with
// the InvoiceTerms endpoint of the Project service.
type ProjectInvoiceTermsService service

// ProjectInvoiceTerms:
// Service: Project
// Entity: InvoiceTerms
// URL: /api/v1/{division}/project/InvoiceTerms
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ProjectInvoiceTerms
type ProjectInvoiceTerms struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Amount: Amount in the currency of the transaction
	Amount *float64 `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Deliverable: WBS&#39;s deliverable linked to invoice term
	Deliverable *string `json:",omitempty"`

	// Description: Description of invoice term
	Description *string `json:",omitempty"`

	// Division: Division number
	Division *int `json:",omitempty"`

	// ExecutionFromDate: Execution date: From
	ExecutionFromDate *Date `json:",omitempty"`

	// ExecutionToDate: Execution date: To
	ExecutionToDate *Date `json:",omitempty"`

	// InvoiceDate: Invoice date
	InvoiceDate *Date `json:",omitempty"`

	// Item: Reference to item
	Item *GUID `json:",omitempty"`

	// ItemDescription: Description of item
	ItemDescription *string `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Notes: Notes
	Notes *string `json:",omitempty"`

	// Percentage: Percentage of amount per project&#39;s budgeted amount
	Percentage *float64 `json:",omitempty"`

	// Project: Reference to project
	Project *GUID `json:",omitempty"`

	// ProjectDescription: Description of project
	ProjectDescription *string `json:",omitempty"`

	// VATCode: Reference to VATCode
	VATCode *string `json:",omitempty"`

	// VATCodeDescription: Description of VATCode
	VATCodeDescription *string `json:",omitempty"`

	// VATPercentage: VATCode percentage
	VATPercentage *float64 `json:",omitempty"`
}

func (s *ProjectInvoiceTerms) GetIdentifier() GUID {
	return *s.ID
}

// List the InvoiceTerms entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ProjectInvoiceTermsService) List(ctx context.Context, division int, all bool) ([]*ProjectInvoiceTerms, error) {
	var entities []*ProjectInvoiceTerms
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/project/InvoiceTerms?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
