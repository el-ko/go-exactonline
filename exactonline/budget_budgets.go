// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// BudgetBudgetsService is responsible for communicating with
// the Budgets endpoint of the Budget service.
type BudgetBudgetsService service

// BudgetBudgets:
// Service: Budget
// Entity: Budgets
// URL: /api/v1/{division}/budget/Budgets
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=BudgetBudgets
type BudgetBudgets struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// AmountDC: Budget amount (always in the default currency of the company)
	AmountDC *float64 `json:",omitempty"`

	// BudgetScenario: Budget scenario
	BudgetScenario *GUID `json:",omitempty"`

	// BudgetScenarioCode: Code of BudgetScenario
	BudgetScenarioCode *string `json:",omitempty"`

	// BudgetScenarioDescription: Description of BudgetScenario
	BudgetScenarioDescription *string `json:",omitempty"`

	// Costcenter: Used for cost center-specific budgets - NULL otherwise
	Costcenter *string `json:",omitempty"`

	// CostcenterDescription: Description of Costcenter
	CostcenterDescription *string `json:",omitempty"`

	// Costunit: Used for cost unit-specific budgets - NULL otherwise
	Costunit *string `json:",omitempty"`

	// CostunitDescription: Description of Costunit
	CostunitDescription *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// GLAccount: G/L account
	GLAccount *GUID `json:",omitempty"`

	// GLAccountCode: Code of GLAccount
	GLAccountCode *string `json:",omitempty"`

	// GLAccountDescription: Description of GLAccount
	GLAccountDescription *string `json:",omitempty"`

	// HID: Numerical ID. Never displayed to the user, but it may have its use for performance reasons
	HID *int64 `json:",omitempty"`

	// Item: Used for item-specific budgets - NULL otherwise
	Item *GUID `json:",omitempty"`

	// ItemCode: Code of Item
	ItemCode *string `json:",omitempty"`

	// ItemDescription: Description of Item
	ItemDescription *string `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// ReportingPeriod: Period (combined with financial year)
	ReportingPeriod *int `json:",omitempty"`

	// ReportingYear: Financial year
	ReportingYear *int `json:",omitempty"`
}

func (s *BudgetBudgets) GetIdentifier() GUID {
	return *s.ID
}

// List the Budgets entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *BudgetBudgetsService) List(ctx context.Context, division int, all bool) ([]*BudgetBudgets, error) {
	var entities []*BudgetBudgets
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/budget/Budgets?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
