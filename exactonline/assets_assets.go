// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// AssetsAssetsService is responsible for communicating with
// the Assets endpoint of the Assets service.
type AssetsAssetsService service

// AssetsAssets:
// Service: Assets
// Entity: Assets
// URL: /api/v1/{division}/assets/Assets
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=AssetsAssets
type AssetsAssets struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// AlreadyDepreciated: Indicates if an asset was already depreciated before registering it in Exact Online
	AlreadyDepreciated *byte `json:",omitempty"`

	// AssetFrom: In case of a transfer or a split, the original asset ID is saved in this field. This is done to provide tracability of the Asset
	AssetFrom *GUID `json:",omitempty"`

	// AssetFromDescription: Description of AssetFrom
	AssetFromDescription *string `json:",omitempty"`

	// AssetGroup: Asset group identifies GLAccounts to be used for Asset transactions
	AssetGroup *GUID `json:",omitempty"`

	// AssetGroupCode: Code of the asset group
	AssetGroupCode *string `json:",omitempty"`

	// AssetGroupDescription: Description of the asset group
	AssetGroupDescription *string `json:",omitempty"`

	// CatalogueValue: The catalogue value of the asset
	CatalogueValue *float64 `json:",omitempty"`

	// Code: Code of the asset
	Code *string `json:",omitempty"`

	// Costcenter: Assets can be linked to a cost center
	Costcenter *string `json:",omitempty"`

	// CostcenterDescription: Description of Costcenter
	CostcenterDescription *string `json:",omitempty"`

	// Costunit: Assets can be linked to a cost unit
	Costunit *string `json:",omitempty"`

	// CostunitDescription: Description of Costunit
	CostunitDescription *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// DeductionPercentage: Used for Belgium legislation. Used to produce the official &#39;Investment deduction&#39; report
	DeductionPercentage *float64 `json:",omitempty"`

	// DepreciatedAmount: Amount that is already depreciated when adding an existing asset. Can only be filled when &#39;Alreadydepreciated&#39; is on
	DepreciatedAmount *float64 `json:",omitempty"`

	// DepreciatedPeriods: Number of periods that already have been depreciated for the asset. Can only be filled when &#39;Alreadydepreciated&#39; is on
	DepreciatedPeriods *int `json:",omitempty"`

	// DepreciatedStartDate: StartDate of depreciating. Can only be filled when &#39;Alreadydepreciated&#39; is on
	DepreciatedStartDate *Date `json:",omitempty"`

	// Description: This is the description of the Asset
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// EndDate: Asset EndDate is filled when asset is Sold or Inactive
	EndDate *Date `json:",omitempty"`

	// EngineEmission: Engine emission of the asset, needed to calculate the co² report
	EngineEmission *int `json:",omitempty"`

	// EngineType: Engine type of the asset, Needed to generate a co² report
	EngineType *int `json:",omitempty"`

	// GLTransactionLine: Links to the gltransactions.id. GL transaction line based on which the asset is created
	GLTransactionLine *GUID `json:",omitempty"`

	// GLTransactionLineDescription: Description of GLTransactionLine
	GLTransactionLineDescription *string `json:",omitempty"`

	// InvestmentAccount: Supplier of the asset
	InvestmentAccount *GUID `json:",omitempty"`

	// InvestmentAccountCode: Code of InvestmentAccount
	InvestmentAccountCode *string `json:",omitempty"`

	// InvestmentAccountName: Name of InvestmentAccount
	InvestmentAccountName *string `json:",omitempty"`

	// InvestmentAmountDC: Investment amount in the default currency of the company
	InvestmentAmountDC *float64 `json:",omitempty"`

	// InvestmentAmountFC: Investment value of the asset. Currently the field is filled with the PurchasePriceLocal. Can be status &#39;Not used&#39; after sources have been cleaned
	InvestmentAmountFC *float64 `json:",omitempty"`

	// InvestmentCurrency: Indicates the currency of the investment amount
	InvestmentCurrency *string `json:",omitempty"`

	// InvestmentCurrencyDescription: Description of InvestmentCurrency
	InvestmentCurrencyDescription *string `json:",omitempty"`

	// InvestmentDate: Refers to the original date when the asset was bought
	InvestmentDate *Date `json:",omitempty"`

	// InvestmentDeduction: Belgian functionality, to determine how a local legal report regarding investment deduction must be created
	InvestmentDeduction *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Notes: Extra remarks for the asset
	Notes *string `json:",omitempty"`

	// Parent: Parent asset
	Parent *GUID `json:",omitempty"`

	// ParentCode: Code of Parent
	ParentCode *string `json:",omitempty"`

	// ParentDescription: Description of Parent
	ParentDescription *string `json:",omitempty"`

	// Picture: Image for an asset
	Picture *[]byte `json:",omitempty"`

	// PictureFileName: Filename of the image
	PictureFileName *string `json:",omitempty"`

	// PrimaryMethod: First method of depreciation. Currently, it is the only one used
	PrimaryMethod *GUID `json:",omitempty"`

	// PrimaryMethodCode: Code of PrimaryMethod
	PrimaryMethodCode *string `json:",omitempty"`

	// PrimaryMethodDescription: Description of PrimaryMethod
	PrimaryMethodDescription *string `json:",omitempty"`

	// ResidualValue: Indicates the residual value of the asset at the end of the depreciation
	ResidualValue *float64 `json:",omitempty"`

	// StartDate: Asset Depreciation StartDate
	StartDate *Date `json:",omitempty"`

	// Status: Identifies the status of the Asset. (see AssetStatus table to see the possibilities)
	Status *int `json:",omitempty"`

	// TransactionEntryID: Reference to the transaction lines that make up the financial entry.
	TransactionEntryID *GUID `json:",omitempty"`

	// TransactionEntryNo: Entry number of transaction
	TransactionEntryNo *int `json:",omitempty"`
}

func (s *AssetsAssets) GetIdentifier() GUID {
	return *s.ID
}

// List the Assets entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *AssetsAssetsService) List(ctx context.Context, division int, all bool) ([]*AssetsAssets, error) {
	var entities []*AssetsAssets
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/assets/Assets?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
