// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// PurchaseOrderPurchaseOrdersService is responsible for communicating with
// the PurchaseOrders endpoint of the PurchaseOrder service.
type PurchaseOrderPurchaseOrdersService service

// PurchaseOrderPurchaseOrders:
// Service: PurchaseOrder
// Entity: PurchaseOrders
// URL: /api/v1/{division}/purchaseorder/PurchaseOrders
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=PurchaseOrderPurchaseOrders
type PurchaseOrderPurchaseOrders struct {
	// PurchaseOrderID:
	PurchaseOrderID *GUID `json:"PurchaseOrderID,omitempty"`

	// AmountDC:
	AmountDC *float64 `json:"AmountDC,omitempty"`

	// AmountFC:
	AmountFC *float64 `json:"AmountFC,omitempty"`

	// Created:
	Created *Date `json:"Created,omitempty"`

	// Creator:
	Creator *GUID `json:"Creator,omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:"CreatorFullName,omitempty"`

	// Currency:
	Currency *string `json:"Currency,omitempty"`

	// DeliveryAccount:
	DeliveryAccount *GUID `json:"DeliveryAccount,omitempty"`

	// DeliveryAccountCode:
	DeliveryAccountCode *string `json:"DeliveryAccountCode,omitempty"`

	// DeliveryAccountName:
	DeliveryAccountName *string `json:"DeliveryAccountName,omitempty"`

	// DeliveryAddress:
	DeliveryAddress *GUID `json:"DeliveryAddress,omitempty"`

	// DeliveryContact:
	DeliveryContact *GUID `json:"DeliveryContact,omitempty"`

	// DeliveryContactPersonFullName:
	DeliveryContactPersonFullName *string `json:"DeliveryContactPersonFullName,omitempty"`

	// Description:
	Description *string `json:"Description,omitempty"`

	// Division:
	Division *int `json:"Division,omitempty"`

	// Document:
	Document *GUID `json:"Document,omitempty"`

	// DocumentSubject:
	DocumentSubject *string `json:"DocumentSubject,omitempty"`

	// DropShipment:
	DropShipment *bool `json:"DropShipment,omitempty"`

	// ExchangeRate:
	ExchangeRate *float64 `json:"ExchangeRate,omitempty"`

	// InvoiceStatus:
	InvoiceStatus *int `json:"InvoiceStatus,omitempty"`

	// Modified:
	Modified *Date `json:"Modified,omitempty"`

	// Modifier:
	Modifier *GUID `json:"Modifier,omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:"ModifierFullName,omitempty"`

	// OrderDate:
	OrderDate *Date `json:"OrderDate,omitempty"`

	// OrderNumber:
	OrderNumber *int `json:"OrderNumber,omitempty"`

	// OrderStatus:
	OrderStatus *int `json:"OrderStatus,omitempty"`

	// PaymentCondition:
	PaymentCondition *string `json:"PaymentCondition,omitempty"`

	// PaymentConditionDescription:
	PaymentConditionDescription *string `json:"PaymentConditionDescription,omitempty"`

	// PurchaseAgent:
	PurchaseAgent *GUID `json:"PurchaseAgent,omitempty"`

	// PurchaseAgentFullName:
	PurchaseAgentFullName *string `json:"PurchaseAgentFullName,omitempty"`

	// PurchaseOrderLines:
	PurchaseOrderLines *[]byte `json:"PurchaseOrderLines,omitempty"`

	// ReceiptDate:
	ReceiptDate *Date `json:"ReceiptDate,omitempty"`

	// ReceiptStatus:
	ReceiptStatus *int `json:"ReceiptStatus,omitempty"`

	// Remarks:
	Remarks *string `json:"Remarks,omitempty"`

	// SalesOrder:
	SalesOrder *GUID `json:"SalesOrder,omitempty"`

	// SalesOrderNumber:
	SalesOrderNumber *int `json:"SalesOrderNumber,omitempty"`

	// ShippingMethod:
	ShippingMethod *GUID `json:"ShippingMethod,omitempty"`

	// ShippingMethodDescription:
	ShippingMethodDescription *string `json:"ShippingMethodDescription,omitempty"`

	// Source:
	Source *int `json:"Source,omitempty"`

	// Supplier:
	Supplier *GUID `json:"Supplier,omitempty"`

	// SupplierCode:
	SupplierCode *string `json:"SupplierCode,omitempty"`

	// SupplierContact:
	SupplierContact *GUID `json:"SupplierContact,omitempty"`

	// SupplierContactPersonFullName:
	SupplierContactPersonFullName *string `json:"SupplierContactPersonFullName,omitempty"`

	// SupplierName:
	SupplierName *string `json:"SupplierName,omitempty"`

	// VATAmount:
	VATAmount *float64 `json:"VATAmount,omitempty"`

	// Warehouse:
	Warehouse *GUID `json:"Warehouse,omitempty"`

	// WarehouseCode:
	WarehouseCode *string `json:"WarehouseCode,omitempty"`

	// WarehouseDescription:
	WarehouseDescription *string `json:"WarehouseDescription,omitempty"`

	// YourRef:
	YourRef *string `json:"YourRef,omitempty"`
}

func (s *PurchaseOrderPurchaseOrders) GetIdentifier() GUID {
	return *s.PurchaseOrderID
}

// List the PurchaseOrders entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *PurchaseOrderPurchaseOrdersService) List(ctx context.Context, division int, all bool) ([]*PurchaseOrderPurchaseOrders, error) {
	var entities []*PurchaseOrderPurchaseOrders
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/purchaseorder/PurchaseOrders?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}

/* // Get the PurchaseOrders enitity, by PurchaseOrderID.
func (s *PurchaseOrderPurchaseOrdersService) Get(ctx context.Context, division int, id GUID) (*PurchaseOrderPurchaseOrders, error) {
	var entities []*PurchaseOrderPurchaseOrders
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/purchaseorder/PurchaseOrders?$select=*", division)
	if err != nil {
		return nil, err
	}

	if _, _, _, err := s.client.ListRequestAndDo(ctx, u.String(), &entities); err != nil {
		return nil, err
	}

	if len(entities) != 1 {
		return nil, fmt.Errorf("Returned %d PurchaseOrders entities, expected 1", len(entities))
	}

	return entities[0], nil
} */
