// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// SalesOrderGoodsDeliveriesService is responsible for communicating with
// the GoodsDeliveries endpoint of the SalesOrder service.
type SalesOrderGoodsDeliveriesService service

// SalesOrderGoodsDeliveries:
// Service: SalesOrder
// Entity: GoodsDeliveries
// URL: /api/v1/{division}/salesorder/GoodsDeliveries
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST PUT
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=SalesOrderGoodsDeliveries
type SalesOrderGoodsDeliveries struct {
	// EntryID:
	EntryID *GUID `json:",omitempty"`

	// Created:
	Created *Date `json:",omitempty"`

	// Creator:
	Creator *GUID `json:",omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:",omitempty"`

	// DeliveryAccount:
	DeliveryAccount *GUID `json:",omitempty"`

	// DeliveryAccountCode:
	DeliveryAccountCode *string `json:",omitempty"`

	// DeliveryAccountName:
	DeliveryAccountName *string `json:",omitempty"`

	// DeliveryAddress:
	DeliveryAddress *GUID `json:",omitempty"`

	// DeliveryContact:
	DeliveryContact *GUID `json:",omitempty"`

	// DeliveryContactPersonFullName:
	DeliveryContactPersonFullName *string `json:",omitempty"`

	// DeliveryDate:
	DeliveryDate *Date `json:",omitempty"`

	// DeliveryNumber:
	DeliveryNumber *int `json:",omitempty"`

	// Description:
	Description *string `json:",omitempty"`

	// Division:
	Division *int `json:",omitempty"`

	// Document:
	Document *GUID `json:",omitempty"`

	// DocumentSubject:
	DocumentSubject *string `json:",omitempty"`

	// EntryNumber:
	EntryNumber *int `json:",omitempty"`

	// GoodsDeliveryLines:
	GoodsDeliveryLines *[]byte `json:",omitempty"`

	// Modified:
	Modified *Date `json:",omitempty"`

	// Modifier:
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:",omitempty"`

	// Remarks:
	Remarks *string `json:",omitempty"`

	// ShippingMethod:
	ShippingMethod *GUID `json:",omitempty"`

	// ShippingMethodCode:
	ShippingMethodCode *string `json:",omitempty"`

	// ShippingMethodDescription:
	ShippingMethodDescription *string `json:",omitempty"`

	// TrackingNumber:
	TrackingNumber *string `json:",omitempty"`

	// Warehouse:
	Warehouse *GUID `json:",omitempty"`

	// WarehouseCode:
	WarehouseCode *string `json:",omitempty"`

	// WarehouseDescription:
	WarehouseDescription *string `json:",omitempty"`
}

func (s *SalesOrderGoodsDeliveries) GetIdentifier() GUID {
	return *s.EntryID
}

// List the GoodsDeliveries entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *SalesOrderGoodsDeliveriesService) List(ctx context.Context, division int, all bool) ([]*SalesOrderGoodsDeliveries, error) {
	var entities []*SalesOrderGoodsDeliveries
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/salesorder/GoodsDeliveries?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
