// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// PayrollEmploymentsService is responsible for communicating with
// the Employments endpoint of the Payroll service.
type PayrollEmploymentsService service

// PayrollEmployments:
// Service: Payroll
// Entity: Employments
// URL: /api/v1/{division}/payroll/Employments
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=PayrollEmployments
type PayrollEmployments struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// Employee: Employee ID
	Employee *GUID `json:",omitempty"`

	// EmployeeFullName: Name of employee
	EmployeeFullName *string `json:",omitempty"`

	// EmployeeHID: Numeric number of Employee
	EmployeeHID *int `json:",omitempty"`

	// EndDate: End date of employment
	EndDate *Date `json:",omitempty"`

	// HID: Numeric ID of the employment
	HID *int `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// ReasonEnd: ID of employment ended
	ReasonEnd *int `json:",omitempty"`

	// ReasonEndDescription: Reason of end of employment
	ReasonEndDescription *string `json:",omitempty"`

	// ReasonEndFlex: Reason of ended flexible employment
	ReasonEndFlex *int `json:",omitempty"`

	// ReasonEndFlexDescription: Other reason for end of employment
	ReasonEndFlexDescription *string `json:",omitempty"`

	// StartDate: Start date of employment
	StartDate *Date `json:",omitempty"`

	// StartDateOrganization: Start date of the employee in the organization. This field is used to count the years in service.
	StartDateOrganization *Date `json:",omitempty"`
}

func (s *PayrollEmployments) GetIdentifier() GUID {
	return *s.ID
}

// List the Employments entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *PayrollEmploymentsService) List(ctx context.Context, division int, all bool) ([]*PayrollEmployments, error) {
	var entities []*PayrollEmployments
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/payroll/Employments?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
