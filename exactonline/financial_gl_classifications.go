// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// FinancialGLClassificationsService is responsible for communicating with
// the GLClassifications endpoint of the Financial service.
type FinancialGLClassificationsService service

// FinancialGLClassifications:
// Service: Financial
// Entity: GLClassifications
// URL: /api/v1/{division}/financial/GLClassifications
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=FinancialGLClassifications
type FinancialGLClassifications struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Abstract: Abstract elements are only used in presentation linkbases to group other elements. They are not supposed to be used in instance documents
	Abstract *bool `json:",omitempty"`

	// Balance: Only used for amount concepts: in that case either &#39;debit&#39; or &#39;credit&#39;
	Balance *string `json:",omitempty"`

	// Code: The Code is unique
	Code *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description of the element. Note that this description is only used for division-specific taxonomies (or reporting schemes).
	Description *string `json:",omitempty"`

	// Division: Division is optional. For taxonomies of Taxonomies.Type = 0 (general taxonomies), the Division is empty. For division specific taxonomies it is mandatory
	Division *int `json:",omitempty"`

	// IsTupleSubElement: Obsolete
	IsTupleSubElement *bool `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// Name: The Name is unique in the namespace
	Name *string `json:",omitempty"`

	// Nillable: Determines whether usage of the element is mandatory in an instance document
	Nillable *bool `json:",omitempty"`

	// Parent: Parent element for reporting schemes. In a reporting scheme, an element can have only one parent. This column is only used for reporting schemes. Note that in a real taxonomy, elements can have multiple parents.
	Parent *GUID `json:",omitempty"`

	// PeriodType: Only used for item concepts: either &#39;instant&#39; or &#39;duration&#39;. &#39;instant&#39; is used for balance types of concepts, &#39;duration&#39; is used for P&amp;L types of concepts
	PeriodType *string `json:",omitempty"`

	// SubstitutionGroup: Mostly import sutstitutiongroup is xbrli:tuple, which makes the element a tuple concept. The default substitutiongroup for item concepts is xbrli:item
	SubstitutionGroup *string `json:",omitempty"`

	// TaxonomyNamespace: Namespace of the element
	TaxonomyNamespace *GUID `json:",omitempty"`

	// TaxonomyNamespaceDescription: Description of TaxonomyNamespace
	TaxonomyNamespaceDescription *string `json:",omitempty"`

	// Type: Type of the element
	Type *GUID `json:",omitempty"`
}

func (s *FinancialGLClassifications) GetIdentifier() GUID {
	return *s.ID
}

// List the GLClassifications entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *FinancialGLClassificationsService) List(ctx context.Context, division int, all bool) ([]*FinancialGLClassifications, error) {
	var entities []*FinancialGLClassifications
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/financial/GLClassifications?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
