// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// WorkflowRequestAttachmentsService is responsible for communicating with
// the RequestAttachments endpoint of the Workflow service.
type WorkflowRequestAttachmentsService service

// WorkflowRequestAttachments:
// Service: Workflow
// Entity: RequestAttachments
// URL: /api/v1/beta/{division}/workflow/RequestAttachments
// HasWebhook: false
// IsInBeta: true
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=WorkflowRequestAttachments
type WorkflowRequestAttachments struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Division: The division
	Division *int `json:",omitempty"`

	// DownloadUrl: To get the file in its original format (xml, jpg, pdf, etc.) append &amp;Download=1 to the url.
	DownloadUrl *string `json:",omitempty"`

	// FileName: Filename of the attachment
	FileName *string `json:",omitempty"`

	// FileSize: File size of the attachment
	FileSize *float64 `json:",omitempty"`

	// Request: The request this attachment is linked to
	Request *GUID `json:",omitempty"`
}

func (s *WorkflowRequestAttachments) GetIdentifier() GUID {
	return *s.ID
}

// List the RequestAttachments entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *WorkflowRequestAttachmentsService) List(ctx context.Context, division int, all bool) ([]*WorkflowRequestAttachments, error) {
	var entities []*WorkflowRequestAttachments
	u, err := s.client.ResolvePathWithDivision("/api/v1/beta/{division}/workflow/RequestAttachments?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
