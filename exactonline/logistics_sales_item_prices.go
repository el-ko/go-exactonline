// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// LogisticsSalesItemPricesService is responsible for communicating with
// the SalesItemPrices endpoint of the Logistics service.
type LogisticsSalesItemPricesService service

// LogisticsSalesItemPrices:
// Service: Logistics
// Entity: SalesItemPrices
// URL: /api/v1/{division}/logistics/SalesItemPrices
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=LogisticsSalesItemPrices
type LogisticsSalesItemPrices struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Account: ID of the customer
	Account *GUID `json:",omitempty"`

	// AccountName: Name of the customer account
	AccountName *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// Currency: The currency of the price
	Currency *string `json:",omitempty"`

	// DefaultItemUnit: The default unit of the item
	DefaultItemUnit *string `json:",omitempty"`

	// DefaultItemUnitDescription: The description of the default item unit
	DefaultItemUnitDescription *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// EndDate: Together with StartDate this determines whether the price is active
	EndDate *Date `json:",omitempty"`

	// Item: Item ID
	Item *GUID `json:",omitempty"`

	// ItemCode: Code of Item
	ItemCode *string `json:",omitempty"`

	// ItemDescription: Description of Item
	ItemDescription *string `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// NumberOfItemsPerUnit: This is the multiplication factor when going from default item unit to the unit of this price.For example if the default item unit is &#39;gram&#39; and the price unit is &#39;kilogram&#39; then the value of this property is 1000.
	NumberOfItemsPerUnit *float64 `json:",omitempty"`

	// Price: The actual price of this sales item
	Price *float64 `json:",omitempty"`

	// Quantity: Minimum quantity to which the price is applicable
	Quantity *float64 `json:",omitempty"`

	// StartDate: Together with EndDate this determines whether the price is active
	StartDate *Date `json:",omitempty"`

	// Unit: The unit code of the price
	Unit *string `json:",omitempty"`

	// UnitDescription: Description of the price unit
	UnitDescription *string `json:",omitempty"`
}

func (s *LogisticsSalesItemPrices) GetIdentifier() GUID {
	return *s.ID
}

// List the SalesItemPrices entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *LogisticsSalesItemPricesService) List(ctx context.Context, division int, all bool) ([]*LogisticsSalesItemPrices, error) {
	var entities []*LogisticsSalesItemPrices
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/logistics/SalesItemPrices?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
