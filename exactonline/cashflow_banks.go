// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// CashflowBanksService is responsible for communicating with
// the Banks endpoint of the Cashflow service.
type CashflowBanksService service

// CashflowBanks:
// Service: Cashflow
// Entity: Banks
// URL: /api/v1/{division}/cashflow/Banks
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=CashflowBanks
type CashflowBanks struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// BankName: The name of the bank
	BankName *string `json:",omitempty"`

	// BICCode: The bank identification code of the bank
	BICCode *string `json:",omitempty"`

	// Country: The country in which the bank is based
	Country *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Description: The extended description of the bank
	Description *string `json:",omitempty"`

	// Format: The account format used by the bank
	Format *string `json:",omitempty"`

	// HomePageAddress: The website of the bank
	HomePageAddress *string `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Status: The status of the bank. A = Active, P = Passive
	Status *string `json:",omitempty"`
}

func (s *CashflowBanks) GetIdentifier() GUID {
	return *s.ID
}

// List the Banks entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *CashflowBanksService) List(ctx context.Context, division int, all bool) ([]*CashflowBanks, error) {
	var entities []*CashflowBanks
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/cashflow/Banks?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
