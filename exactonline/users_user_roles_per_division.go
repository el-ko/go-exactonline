// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// UsersUserRolesPerDivisionService is responsible for communicating with
// the UserRolesPerDivision endpoint of the Users service.
type UsersUserRolesPerDivisionService service

// UsersUserRolesPerDivision:
// Service: Users
// Entity: UserRolesPerDivision
// URL: /api/v1/{division}/users/UserRolesPerDivision
// HasWebhook: false
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=UsersUserRolesPerDivision
type UsersUserRolesPerDivision struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of the creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of the creator
	CreatorFullName *string `json:",omitempty"`

	// Description: Description
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// EndDate: Indicates the date and time when te role becomes inactive for the user
	EndDate *Date `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of the last modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of the last modifier
	ModifierFullName *string `json:",omitempty"`

	// Role: The role that the user is linked to
	Role *int `json:",omitempty"`

	// RoleLevel: Rolelevel sets the level on which a role for a user is active. This can be: 1 = Database, 2 = Customer, 3 = Division, 100 = Transferred to accountant
	RoleLevel *int `json:",omitempty"`

	// StartDate: Indicates the date when the role becomes active for the user
	StartDate *Date `json:",omitempty"`

	// UserID: The user that is linked to the role
	UserID *GUID `json:",omitempty"`
}

func (s *UsersUserRolesPerDivision) GetIdentifier() GUID {
	return *s.ID
}

// List the UserRolesPerDivision entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *UsersUserRolesPerDivisionService) List(ctx context.Context, division int, all bool) ([]*UsersUserRolesPerDivision, error) {
	var entities []*UsersUserRolesPerDivision
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/users/UserRolesPerDivision?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
