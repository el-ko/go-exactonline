// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// InventoryWarehousesService is responsible for communicating with
// the Warehouses endpoint of the Inventory service.
type InventoryWarehousesService service

// InventoryWarehouses:
// Service: Inventory
// Entity: Warehouses
// URL: /api/v1/{division}/inventory/Warehouses
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST PUT DELETE
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=InventoryWarehouses
type InventoryWarehouses struct {
	// ID: Primary key
	ID *GUID `json:",omitempty"`

	// Code: Code of the warehouse
	Code *string `json:",omitempty"`

	// Created: Creation date
	Created *Date `json:",omitempty"`

	// Creator: User ID of creator
	Creator *GUID `json:",omitempty"`

	// CreatorFullName: Name of creator
	CreatorFullName *string `json:",omitempty"`

	// DefaultStorageLocation: The default storage location of this warehouse. Warehouses can have a default storage location in packages Manufacturing Premium or Wholesale Premium
	DefaultStorageLocation *GUID `json:",omitempty"`

	// DefaultStorageLocationCode: Default storage location&#39;s code
	DefaultStorageLocationCode *string `json:",omitempty"`

	// DefaultStorageLocationDescription: Default storage location&#39;s description
	DefaultStorageLocationDescription *string `json:",omitempty"`

	// Description: The description of the warehouse
	Description *string `json:",omitempty"`

	// Division: Division code
	Division *int `json:",omitempty"`

	// EMail: Email address
	EMail *string `json:",omitempty"`

	// Main: Indicates if this is the main warehouse. There&#39;s always exactly one main warehouse per administration
	Main *byte `json:",omitempty"`

	// ManagerUser: User reponsible for the warehouse
	ManagerUser *GUID `json:",omitempty"`

	// Modified: Last modified date
	Modified *Date `json:",omitempty"`

	// Modifier: User ID of modifier
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName: Name of modifier
	ModifierFullName *string `json:",omitempty"`

	// UseStorageLocations: Indicates if this warehouse is using storage locations. The storage locations will not be removed when when this is deactivated
	UseStorageLocations *byte `json:",omitempty"`
}

func (s *InventoryWarehouses) GetIdentifier() GUID {
	return *s.ID
}

// List the Warehouses entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *InventoryWarehousesService) List(ctx context.Context, division int, all bool) ([]*InventoryWarehouses, error) {
	var entities []*InventoryWarehouses
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/inventory/Warehouses?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
