// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// FinancialTransactionTransactionLinesService is responsible for communicating with
// the TransactionLines endpoint of the FinancialTransaction service.
type FinancialTransactionTransactionLinesService service

// FinancialTransactionTransactionLines:
// Service: FinancialTransaction
// Entity: TransactionLines
// URL: /api/v1/{division}/financialtransaction/TransactionLines
// HasWebhook: true
// IsInBeta: false
// Methods: GET
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=FinancialTransactionTransactionLines
type FinancialTransactionTransactionLines struct {
	// ID:
	ID *GUID `json:",omitempty"`

	// Account:
	Account *GUID `json:",omitempty"`

	// AccountCode:
	AccountCode *string `json:",omitempty"`

	// AccountName:
	AccountName *string `json:",omitempty"`

	// AmountDC:
	AmountDC *float64 `json:",omitempty"`

	// AmountFC:
	AmountFC *float64 `json:",omitempty"`

	// AmountVATBaseFC:
	AmountVATBaseFC *float64 `json:",omitempty"`

	// AmountVATFC:
	AmountVATFC *float64 `json:",omitempty"`

	// Asset:
	Asset *GUID `json:",omitempty"`

	// AssetCode:
	AssetCode *string `json:",omitempty"`

	// AssetDescription:
	AssetDescription *string `json:",omitempty"`

	// CostCenter:
	CostCenter *string `json:",omitempty"`

	// CostCenterDescription:
	CostCenterDescription *string `json:",omitempty"`

	// CostUnit:
	CostUnit *string `json:",omitempty"`

	// CostUnitDescription:
	CostUnitDescription *string `json:",omitempty"`

	// Created:
	Created *Date `json:",omitempty"`

	// Creator:
	Creator *GUID `json:",omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:",omitempty"`

	// Currency:
	Currency *string `json:",omitempty"`

	// Date:
	Date *Date `json:",omitempty"`

	// Description:
	Description *string `json:",omitempty"`

	// Division:
	Division *int `json:",omitempty"`

	// Document:
	Document *GUID `json:",omitempty"`

	// DocumentNumber:
	DocumentNumber *int `json:",omitempty"`

	// DocumentSubject:
	DocumentSubject *string `json:",omitempty"`

	// DueDate:
	DueDate *Date `json:",omitempty"`

	// EntryID:
	EntryID *GUID `json:",omitempty"`

	// EntryNumber:
	EntryNumber *int `json:",omitempty"`

	// ExchangeRate:
	ExchangeRate *float64 `json:",omitempty"`

	// ExtraDutyAmountFC:
	ExtraDutyAmountFC *float64 `json:",omitempty"`

	// ExtraDutyPercentage:
	ExtraDutyPercentage *float64 `json:",omitempty"`

	// FinancialPeriod:
	FinancialPeriod *int `json:",omitempty"`

	// FinancialYear:
	FinancialYear *int `json:",omitempty"`

	// GLAccount:
	GLAccount *GUID `json:",omitempty"`

	// GLAccountCode:
	GLAccountCode *string `json:",omitempty"`

	// GLAccountDescription:
	GLAccountDescription *string `json:",omitempty"`

	// InvoiceNumber:
	InvoiceNumber *int `json:",omitempty"`

	// Item:
	Item *GUID `json:",omitempty"`

	// ItemCode:
	ItemCode *string `json:",omitempty"`

	// ItemDescription:
	ItemDescription *string `json:",omitempty"`

	// JournalCode:
	JournalCode *string `json:",omitempty"`

	// JournalDescription:
	JournalDescription *string `json:",omitempty"`

	// LineNumber:
	LineNumber *int `json:",omitempty"`

	// LineType:
	LineType *int `json:",omitempty"`

	// Modified:
	Modified *Date `json:",omitempty"`

	// Modifier:
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:",omitempty"`

	// Notes:
	Notes *string `json:",omitempty"`

	// OffsetID:
	OffsetID *GUID `json:",omitempty"`

	// OrderNumber:
	OrderNumber *int `json:",omitempty"`

	// PaymentDiscountAmount:
	PaymentDiscountAmount *float64 `json:",omitempty"`

	// PaymentReference:
	PaymentReference *string `json:",omitempty"`

	// Project:
	Project *GUID `json:",omitempty"`

	// ProjectCode:
	ProjectCode *string `json:",omitempty"`

	// ProjectDescription:
	ProjectDescription *string `json:",omitempty"`

	// Quantity:
	Quantity *float64 `json:",omitempty"`

	// SerialNumber:
	SerialNumber *string `json:",omitempty"`

	// Status:
	Status *int `json:",omitempty"`

	// Subscription:
	Subscription *GUID `json:",omitempty"`

	// SubscriptionDescription:
	SubscriptionDescription *string `json:",omitempty"`

	// TrackingNumber:
	TrackingNumber *string `json:",omitempty"`

	// TrackingNumberDescription:
	TrackingNumberDescription *string `json:",omitempty"`

	// Type:
	Type *int `json:",omitempty"`

	// VATCode:
	VATCode *string `json:",omitempty"`

	// VATCodeDescription:
	VATCodeDescription *string `json:",omitempty"`

	// VATPercentage:
	VATPercentage *float64 `json:",omitempty"`

	// VATType:
	VATType *string `json:",omitempty"`

	// YourRef:
	YourRef *string `json:",omitempty"`
}

func (s *FinancialTransactionTransactionLines) GetIdentifier() GUID {
	return *s.ID
}

// List the TransactionLines entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *FinancialTransactionTransactionLinesService) List(ctx context.Context, division int, all bool) ([]*FinancialTransactionTransactionLines, error) {
	var entities []*FinancialTransactionTransactionLines
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/financialtransaction/TransactionLines?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
