// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// MailboxMailMessagesSentService is responsible for communicating with
// the MailMessagesSent endpoint of the Mailbox service.
type MailboxMailMessagesSentService service

// MailboxMailMessagesSent:
// Service: Mailbox
// Entity: MailMessagesSent
// URL: /api/v1/{division}/mailbox/MailMessagesSent
// HasWebhook: true
// IsInBeta: false
// Methods: GET POST
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=MailboxMailMessagesSent
type MailboxMailMessagesSent struct {
	// ID:
	ID *GUID `json:",omitempty"`

	// Bank:
	Bank *GUID `json:",omitempty"`

	// BankAccount:
	BankAccount *string `json:",omitempty"`

	// Created:
	Created *Date `json:",omitempty"`

	// Creator:
	Creator *GUID `json:",omitempty"`

	// CreatorFullName:
	CreatorFullName *string `json:",omitempty"`

	// ForDivision:
	ForDivision *int `json:",omitempty"`

	// Modified:
	Modified *Date `json:",omitempty"`

	// Modifier:
	Modifier *GUID `json:",omitempty"`

	// ModifierFullName:
	ModifierFullName *string `json:",omitempty"`

	// Operation:
	Operation *int `json:",omitempty"`

	// OriginalMessage:
	OriginalMessage *GUID `json:",omitempty"`

	// OriginalMessageSubject:
	OriginalMessageSubject *string `json:",omitempty"`

	// PartnerKey:
	PartnerKey *GUID `json:",omitempty"`

	// Quantity:
	Quantity *float64 `json:",omitempty"`

	// RecipientAccount:
	RecipientAccount *GUID `json:",omitempty"`

	// RecipientDeleted:
	RecipientDeleted *byte `json:",omitempty"`

	// RecipientMailbox:
	RecipientMailbox *string `json:",omitempty"`

	// RecipientMailboxDescription:
	RecipientMailboxDescription *string `json:",omitempty"`

	// RecipientMailboxID:
	RecipientMailboxID *GUID `json:",omitempty"`

	// RecipientStatus:
	RecipientStatus *int `json:",omitempty"`

	// RecipientStatusDescription:
	RecipientStatusDescription *string `json:",omitempty"`

	// SenderAccount:
	SenderAccount *GUID `json:",omitempty"`

	// SenderDateSent:
	SenderDateSent *Date `json:",omitempty"`

	// SenderDeleted:
	SenderDeleted *byte `json:",omitempty"`

	// SenderIPAddress:
	SenderIPAddress *string `json:",omitempty"`

	// SenderMailbox:
	SenderMailbox *string `json:",omitempty"`

	// SenderMailboxDescription:
	SenderMailboxDescription *string `json:",omitempty"`

	// SenderMailboxID:
	SenderMailboxID *GUID `json:",omitempty"`

	// Subject:
	Subject *string `json:",omitempty"`

	// SynchronizationCode:
	SynchronizationCode *string `json:",omitempty"`

	// Type:
	Type *int `json:",omitempty"`
}

func (s *MailboxMailMessagesSent) GetIdentifier() GUID {
	return *s.ID
}

// List the MailMessagesSent entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *MailboxMailMessagesSentService) List(ctx context.Context, division int, all bool) ([]*MailboxMailMessagesSent, error) {
	var entities []*MailboxMailMessagesSent
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/mailbox/MailMessagesSent?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
