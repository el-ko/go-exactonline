// Copyright 2018 The go-exactonline AUTHORS. All rights reserved.
//
// Use of this source code is governed by a MIT
// license that can be found in the LICENSE file.
// Code generated by gen-services.go; DO NOT EDIT.
package exactonline

import (
	"context"
)

// ManufacturingStageForDeliveryReversalsService is responsible for communicating with
// the StageForDeliveryReversals endpoint of the Manufacturing service.
type ManufacturingStageForDeliveryReversalsService service

// ManufacturingStageForDeliveryReversals:
// Service: Manufacturing
// Entity: StageForDeliveryReversals
// URL: /api/v1/{division}/manufacturing/StageForDeliveryReversals
// HasWebhook: false
// IsInBeta: false
// Methods: GET POST
// Endpoint docs: https://start.exactonline.nl/docs/HlpRestAPIResourcesDetails.aspx?name=ManufacturingStageForDeliveryReversals
type ManufacturingStageForDeliveryReversals struct {
	// Id: ID of this StageForDeliveryReversal
	Id *GUID `json:",omitempty"`

	// CreatedBy: ID of creating user
	CreatedBy *GUID `json:",omitempty"`

	// CreatedByFullName: Name of the creating user
	CreatedByFullName *string `json:",omitempty"`

	// CreatedDate: Date of this reversal
	CreatedDate *Date `json:",omitempty"`

	// IsBatch: Does the shop order receipt&#39;s item use batch numbers
	IsBatch *byte `json:",omitempty"`

	// IsFractionAllowedItem: Indicates if fractions (for example 0.35) are allowed for quantities of the StageForDeliveryReversal&#39;s item
	IsFractionAllowedItem *byte `json:",omitempty"`

	// IsSerial: Does the shop order receipt&#39;s item use serial numbers
	IsSerial *byte `json:",omitempty"`

	// Item: Item reversed
	Item *GUID `json:",omitempty"`

	// ItemCode: Code of item reversed
	ItemCode *string `json:",omitempty"`

	// ItemDescription: Description of item reversed
	ItemDescription *string `json:",omitempty"`

	// ItemPictureUrl: Picture url of by-product item
	ItemPictureUrl *string `json:",omitempty"`

	// Quantity: Quantity reversed
	Quantity *float64 `json:",omitempty"`

	// RelatedId: ID of the original stage for delivery entry, which is being reversed
	RelatedId *GUID `json:",omitempty"`

	// ShopOrder: Shop order being reversed to
	ShopOrder *GUID `json:",omitempty"`

	// ShopOrderNumber: Number of shop order being reversed to
	ShopOrderNumber *int `json:",omitempty"`

	// TransactionDate: Effective date of this StageForDeliveryReversal
	TransactionDate *Date `json:",omitempty"`

	// Unit: Unit of measurement abbreviation of item reversed
	Unit *string `json:",omitempty"`

	// UnitDescription: Unit of measurement of item reversed
	UnitDescription *string `json:",omitempty"`

	// Warehouse: ID of the shop order warehouse
	Warehouse *GUID `json:",omitempty"`

	// WarehouseCode: Code of the shop order warehouse
	WarehouseCode *string `json:",omitempty"`

	// WarehouseDescription: Description of the shop order warehouse
	WarehouseDescription *string `json:",omitempty"`
}

func (s *ManufacturingStageForDeliveryReversals) GetIdentifier() GUID {
	return *s.Id
}

// List the StageForDeliveryReversals entities in the provided divison.
// If all is true, all the paginated results are fetched; if false, list the first page.
func (s *ManufacturingStageForDeliveryReversalsService) List(ctx context.Context, division int, all bool) ([]*ManufacturingStageForDeliveryReversals, error) {
	var entities []*ManufacturingStageForDeliveryReversals
	u, err := s.client.ResolvePathWithDivision("/api/v1/{division}/manufacturing/StageForDeliveryReversals?$select=*", division)
	if err != nil {
		return nil, err
	}
	if all {
		err = s.client.ListRequestAndDoAll(ctx, u.String(), &entities)
		return entities, err
	}
	_, _, _, err = s.client.ListRequestAndDo(ctx, u.String(), &entities)
	return entities, err
}
